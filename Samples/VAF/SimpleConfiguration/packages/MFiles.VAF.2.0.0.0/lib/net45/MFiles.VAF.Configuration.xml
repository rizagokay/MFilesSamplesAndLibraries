<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MFiles.VAF.Configuration</name>
    </assembly>
    <members>
        <member name="T:MFiles.VAF.VersionInfo">
            <summary>
            Version details.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.MAJOR_VERSION">
            <summary>
            The major version. Do not change this manually.
            </summary> 
        </member>
        <member name="F:MFiles.VAF.VersionInfo.MINOR_VERSION">
            <summary>
            The minor version. Do not change this manually.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.BUILD_NUMBER">
            <summary>
            Build number. Do not change this manually.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.PATCH_NUMBER">
            <summary>
            Patch number. Do not change this manually.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.VERSION_STRING">
            <summary>
            The version string. Do not change this manually.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.VERSION_STRING_WITH_UNDERSCORES">
            <summary>
            The version string. Do not change this manually.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.COMMENTS">
            <summary>
            Comments for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.COMPANY_NAME">
            <summary>
            Company for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.LEGAL_COPYRIGHT">
            <summary>
            Copyright for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.LEGAL_TRADEMARKS">
            <summary>
            Trademark for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.PRIVATE_BUILD">
            <summary>
            Private build identifier for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.PRODUCT_NAME">
            <summary>
            Product name for the assembly resource.
            </summary>
        </member>
        <member name="F:MFiles.VAF.VersionInfo.SPECIAL_BUILD">
            <summary>
            Special build identifier for the assembly resource.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IConfiguration">
            <summary>
            Base interface all instantiable configuration objects.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfiguration.Valid">
            <summary>
            Method for resolving if the configuration is valid.
            </summary>
            <returns>True if the configuration is valid.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.IConfiguration.ConfigurationId">
            <summary>
            The ID of the configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IConfiguration.ResourceManager">
            <summary>
            Returns the resource manager object that is associated with this configuration. Can be null.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ConfigurationStorageInVault">
            <summary>
            The default implementation of the configuration storage.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IConfigurationStorage">
            <summary>
            
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.ReadConfigurationData(MFilesAPI.Vault,System.String,System.String,System.String@)">
            <summary>
            Returns the persisted configuration data from vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">Configuration key that identifies the module configuration.</param>
            <param name="data">Output parameter for the data that was read. Set to null if the configuration key can't be found.</param>
            <returns>True is the configuration key existed in the defined configuration namespace.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.ReadConfigurationData(MFilesAPI.Vault,System.String,System.String)">
            <summary>
            Returns the persisted configuration data from vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">Configuration key that identifies the module configuration.</param>
            <returns>The read configuration data. Empty string if the configuration key was not found.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.SaveConfigurationData(MFilesAPI.Vault,System.String,System.String,System.String)">
            <summary>
            Persists the configuration data to the vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when saving the configuration.</param>
            <param name="configKey">The configuration key that identifies under which key to store the configuration.</param>
            <param name="data">The configuration data to persist.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Load``1(MFilesAPI.Vault,System.String,System.String)">
            <summary>
            Generic method to load the configuration from the specified vault.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
            <returns>The loaded configuration object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Load(MFilesAPI.Vault,System.Type,System.String,System.String)">
            <summary>
            Method to load the configuration from the specified vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configType">The type of the configuration object to be loaded.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
            <returns>The loaded configuration object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Populate``1(MFilesAPI.Vault,``0,System.String,System.String)">
            <summary>
            Method to populate the configuration from the specified vault.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="vault">The vault.</param>
            <param name="configuration">The configuration object to populate.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Deserialize``1(System.String)">
            <summary>
            Generic method to load the configuration from the specified string. Creates a new object.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Deserialize(System.Type,System.String)">
            <summary>
            Method to load the configuration from the specified string. Creates a new object.
            </summary>
            <param name="configType">The type of the configuration object to be loaded.</param>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Deserialize``1(System.String,``0)">
            <summary>
            Method to load the configuration from the specified string. Populates an existing object.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
            <param name="configuration">The configuration object to populate.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Save``1(MFilesAPI.Vault,``0,System.String,System.String)">
            <summary>
            Save the configuration to the specified vault.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="vault">The vault.</param>
            <param name="configuration">The configuration object to save.</param>
            <param name="configNamespace">The configuration namespace that shall be used when saving the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that is be used when saving.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationStorage.Serialize``1(``0)">
            <summary>
            Serializes the given configuration object to a string.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configuration">The configuration object to save.</param>
            <returns>The configuration object serialized as string.</returns>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.mode">
            <summary>
            Configuration ID creation mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.storageLocation">
            <summary>
            The storage location of the configurations.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.fallbackStorageLocation">
            <summary>
            The fallback storage location of the configurations. Will be checked if the configuration can't be found from the primary location.
            Can be null.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.#ctor(MFilesAPI.MFNamedValueType,System.Nullable{MFilesAPI.MFNamedValueType},MFiles.VAF.Configuration.ConfigurationStorageInVault.ConfigurationIDCombiningMode)">
            <summary>
            Constructor.
            </summary>
            <param name="primaryLocation">The primary NVS area where the named values are.</param>
            <param name="fallbackLocation">Fallback NVS area for reading the values. For writing only the primary location will be used. Can be null.</param>
            <param name="mode">Mode for combining the configuration value IDs.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ReadConfigurationData(MFilesAPI.Vault,System.String,System.String,System.String@)">
            <summary>
            Returns the persisted configuration data from vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">Configuration key that identifies the module configuration.</param>
            <param name="data">Output parameter for the data that was read. Set to null if the configuration key can't be found.</param>
            <returns>True is the configuration key existed in the defined configuration namespace.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ReadConfigurationData(MFilesAPI.Vault,System.String,System.String)">
            <summary>
            Returns the persisted configuration data from vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">Configuration key that identifies the configuration.</param>
            <returns>The read configuration data.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.SaveConfigurationData(MFilesAPI.Vault,System.String,System.String,System.String)">
            <summary>
            Persists the configuration data to the vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when saving the configuration.</param>
            <param name="data">The configuration data to persist.</param>
            <param name="configKey">The configuration key that identifies under which key to store the configuration.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Load``1(MFilesAPI.Vault,System.String,System.String)">
            <summary>
            Generic ethod to load the configuration from the specified vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
            <returns>The loaded configuration object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Load(MFilesAPI.Vault,System.Type,System.String,System.String)">
            <summary>
            Method to load the configuration from the specified vault.
            </summary>
            <param name="vault">The vault.</param>
            <param name="configType">The type of the configuration object to be loaded.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
            <returns>The loaded configuration object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Populate``1(MFilesAPI.Vault,``0,System.String,System.String)">
            <summary>
            Method to populate the configuration from the specified vault.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="vault">The vault.</param>
            <param name="configuration">The configuration object to populate.</param>
            <param name="configNamespace">The configuration namespace that shall be used when loading the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that should be loaded.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Deserialize``1(System.String)">
            <summary>
            Generic method to load the configuration from the specified string. Creates a new object.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Deserialize(System.Type,System.String)">
            <summary>
            Method to load the configuration from the specified string. Creates a new object.
            </summary>
            <param name="configType">The type of the configuration object to be loaded.</param>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Deserialize``1(System.String,``0)">
            <summary>
            Method to load the configuration from the specified string. Populates an existing object.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configurationData">The configuration data from which the configuration object should be loaded from.</param>
            <param name="configuration">The configuration object to populate.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Save``1(MFilesAPI.Vault,``0,System.String,System.String)">
            <summary>
            Save the configuration to the specified vault.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="vault">The vault.</param>
            <param name="configuration">The configuration object to save.</param>
            <param name="configNamespace">The configuration namespace that shall be used when saving the configuration.</param>
            <param name="configKey">The configuration key that identifies the value that is be used when saving.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.Serialize``1(``0)">
            <summary>
            Serializes the given configuration object to a string.
            </summary>
            <typeparam name="T">The configuration object's type.</typeparam>
            <param name="configuration">The configuration object to save.</param>
            <returns>The configuration object serialized as string.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.GetConfigurationID(System.String,System.String)">
            <summary>
            Generates the configuration ID according to the selected mode.
            </summary>
            <param name="configNamespace">The defined configuration namespace.</param>
            <param name="configKey">The defined configuration key.</param>
            <returns>The generated configuration ID.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingContractResolver">
            <summary>
            Class to extend the default contract resolver, for performing the value validations while the configuration data
            is being deserialized.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingContractResolver.#ctor(System.Collections.Generic.HashSet{System.Tuple{System.Object,System.Reflection.MemberInfo}}@)">
            <summary>
            Constructor.
            </summary>
            <param name="definedMembers">The collection that receives the information about specified member values.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>
            Override for creating a validating value provider.
            </summary>
            <param name="member">The configuration member to validate.</param>
            <returns></returns>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingContractResolver.definedMembers">
            <summary>
            The validation results sink object.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider">
            <summary>
            A class to wrap a serialization value provider and to perform a validation for deserialized value.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.#ctor(Newtonsoft.Json.Serialization.IValueProvider,System.Reflection.MemberInfo,System.Collections.Generic.HashSet{System.Tuple{System.Object,System.Reflection.MemberInfo}}@)">
            <summary>
            Constructor.
            </summary>
            <param name="actualValueProvider">The actual value provider to delegate for.</param>
            <param name="memberInfo">The member type for which this value provider exists.</param>
            <param name="definedMembers">The collection that receives the information about specified member values.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.GetValue(System.Object)">
            <summary>
            A pass-through value getter.
            </summary>
            <param name="target">The target object.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Value setter. Performs the value validation.
            </summary>
            <param name="target"></param>
            <param name="value"></param>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.actualValueProvider">
            <summary>
            The wrapped value provider.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.memberInfo">
            <summary>
            The member info of the member whose values are looked after.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ValidatingValueProvider.definedMembers">
            <summary>
            The validation results sink object.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ConfigurationStorageInVault.ConfigurationIDCombiningMode">
            <summary>
            Mode that is used when specifying how the configuration ID is formed.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ConfigurationIDCombiningMode.ConfigNamespaceAsID">
            <summary>
            Uses the namespace as the id.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ConfigurationIDCombiningMode.ConfigKeyAsID">
            <summary>
            Uses the key as the id.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ConfigurationStorageInVault.ConfigurationIDCombiningMode.ConfigNamespaceAndConfigKeyCombinedAsID">
            <summary>
            Uses the namespace and key as the id.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation">
            <summary>
            Defines a command location inside a context menu.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ICommandLocation">
            <summary>
            Defines a location where a command should be shown to users.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ICommandLocation.Container">
            <summary>
            Indicates the container in which the command is shown.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.#ctor(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="priority">Determines the command button's location inside the menu.</param>
            <param name="icon">The name of the icon that will be shown next to the menu item.</param>
            <param name="separatorBefore">Creates a separator before this menu item.</param>
            <param name="noSeparatorAfter">Prevents any line separators from being drawn after this item.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.Container">
            <summary>
            The container in which the command should be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.Icon">
            <summary>
            The name of the icon that will be shown next to the menu item.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.Priority">
            <summary>
            Determines the command button's location inside the menu.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.SeparatorBefore">
            <summary>
            Starts a new context menu section by drawing a line separator
            before this command's menu item.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AbstractMenuCommandLocation.NoSeparatorAfter">
            <summary>
            Prevents any line separators from being drawn after this item.
            Set to true when defining a menu item that should come before the
            first item in a section; in this case SeparatorBefore should 
            also be set to true.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration">
            <summary>
            The LDAP authentication provider configuration class.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.DefaultConfiguration">
            <summary>
            Specifies the default authentication provider.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.BasicAuthenticationProvider">
            <summary>
            Specifies the Basic Authentication provider (username and password) configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.OAuthProviders">
            <summary>
            The OAuth providers.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.LdapProviders">
            <summary>
            The LDAP providers.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.AdfsProviders">
            <summary>
            The ADFS providers.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AuthenticationProvidersConfiguration.SamlProviders">
            <summary>
            The SAML providers.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.CommandButtonStyle">
            <summary>
            Defines the says a command button can be styled.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandButtonStyle.Default">
            <summary>
            Default button styling.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandButtonStyle.Primary">
            <summary>
            Primary button styling.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ButtonBarCommandLocation">
            <summary>
            Defines a command location inside the <see cref="F:MFiles.VAF.Configuration.Domain.CommandContainer.DomainButtonBar"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ButtonBarCommandLocation.#ctor(System.Int32,MFiles.VAF.Configuration.Domain.CommandButtonStyle)">
            <summary>
            Constructor
            </summary>
            <param name="priority"> Determines the command button's location inside the button bar.</param>
            <param name="style">Determines the command button's appearance.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ButtonBarCommandLocation.Container">
            <summary>
            Indicates the container in which the command is shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ButtonBarCommandLocation.Priority">
            <summary>
            Determines the command button's location inside the button bar,
            relative to other buttons.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ButtonBarCommandLocation.Style">
            <summary>
            Determines the command button's appearance.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.AddDomain">
            <summary>
            Defines a directive to add a domain to the navigation tree.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.IClientDirective">
            <summary>
            Interface for a single directive which directs the behavior 
            of the configurator client.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IClientDirective.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.AddDomain.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.AddDomain.Domain">
            <summary>
            The definition of the domain to add to the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.AddDomain.ParentDomainId">
            <summary>
            The id of the parent domain.
            If not specified, the parent domain is assumed to be the one
            whose command this directive was a response to.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.AuthenticateUser">
            <summary>
            Defines a directive to authenticate a user.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ClientDirective.AuthenticateUser.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.AuthenticateUser.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.AuthenticateUser.AuthenticationOptions">
            <summary>
            List of authentication requests.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.LoadConfiguration">
            <summary>
            Defines a directive to load new configuration content for a domain into the editor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.LoadConfiguration.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.LoadConfiguration.DomainId">
            <summary>
            The id of the domain whose configuration will be updated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.LoadConfiguration.Configuration">
            <summary>
            The configuration content to load into the editor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.RefreshDashboard">
            <summary>
            Defines a directive to add a domain to the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RefreshDashboard.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RefreshDashboard.DomainId">
            <summary>
            The id of the domain whose dashboard should be refreshed.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.ReloadDomain">
            <summary>
            Defines a directive to remove and re-add a domain from the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ReloadDomain.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ReloadDomain.Domain">
            <summary>
            The definition of the domain to add to the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ReloadDomain.ParentDomainId">
            <summary>
            The id of the parent domain.
            If not specified, the parent domain is assumed to be the one
            whose command this directive was a response to.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.RemoveDomain">
            <summary>
            Defines a directive to remove a domain from the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RemoveDomain.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RemoveDomain.DomainId">
            <summary>
            The id of the domain to remove from the navigation tree.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.RevalidateDomain">
            <summary>
            Defines a directive to add a domain to the navigation tree.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RevalidateDomain.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RevalidateDomain.DomainId">
            <summary>
            The id of the domain to re-run validation for.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.ShowMessage">
            <summary>
            Defines a directive to show a message to the user.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ShowMessage.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ShowMessage.Message">
            <summary>
            The message to show to the user.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.RefreshMetadataCache">
            <summary>
            Defines a directive that triggers a metadata structure cache refresh on the client.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.RefreshMetadataCache.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.ShowModalDashboard">
            <summary>
            Defines dashboard content to show in a modal dialog to the user.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ShowModalDashboard.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.ShowModalDashboard.Content">
            <summary>
            The message to show to the user.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateCommands">
            <summary>
            Defines a directive to update a domain's commands.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateCommands.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateCommands.DomainId">
            <summary>
            The id of the domain whose commands should be updated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateCommands.Commands">
            <summary>
            The updated list of available domain commands.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.DashboardUpdateMode">
            <summary>
            Indicates how an element will be updated with content.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirective.DashboardUpdateMode.Outer">
            <summary>
            The element itself will be completely replaced with the content.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirective.DashboardUpdateMode.Inner">
            <summary>
            The element's inner content will be replaced with the content.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirective.DashboardUpdateMode.Append">
            <summary>
            The content will be inserted after the element's existing inner content.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirective.DashboardUpdateMode.Prepend">
            <summary>
            The content will be inserted before the element's existing inner content.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDashboardContent">
            <summary>
            Defines a directive to update a domain's dashboard in part or completely.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDashboardContent.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDashboardContent.Content">
            <summary>
            Html content to update the dashboard with.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDashboardContent.Target">
            <summary>
            The target dashboard element where the content should be placed.
            In the form of a css or jquery selector.
            If not specified, the entire dashboard will be replaced
            with the provdied content.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDashboardContent.Mode">
            <summary>
            Determines how the target will be updated with the content.
            If a target is not specified, the mode is ignored.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain">
            <summary>
            Defines a directive to update multiple domain properties at once.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.DomainId">
            <summary>
            The id of the domain to be updated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.DisplayName">
            <summary>
            The updated name of the domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.Description">
            <summary>
            The updated description of the domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.SortPriority">
            <summary>
            The updated sort priority of the domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.StatusSummary">
            <summary>
            The updated status summary of the domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateDomain.Commands">
            <summary>
            The updated list of available domain commands.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateStatusSummary">
            <summary>
            Defines a directive to update a domain's status.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateStatusSummary.Type">
            <summary>
            Indicates the directive type defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateStatusSummary.DomainId">
            <summary>
            The id of the domain whose status should be updated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ClientDirective.UpdateStatusSummary.StatusSummary">
            <summary>
            The updated status summary of the domain.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationMenuCommandLocation">
            <summary>
            Defines a command location inside the <see cref="F:MFiles.VAF.Configuration.Domain.CommandContainer.ConfigurationContextMenu"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationMenuCommandLocation.#ctor(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="priority">Determines the command button's location inside the menu.</param>
            <param name="icon">The name of the icon that will be shown next to the menu item.</param>
            <param name="separatorBefore">Creates a separator before this menu item.</param>
            <param name="noSeparatorAfter">Prevents any line separators from being drawn after this item.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationMenuCommandLocation.Container">
            <summary>
            Indicates the container in which the command is shown.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommandStyle">
            <summary>
            The ways in which a dashboard command can be rendered.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommandStyle.Link">
            <summary>
            Indicates the command should be shown as a link.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommandStyle.Button">
            <summary>
            Indicates the command should be shown as a button.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand">
            <summary>
            Represents a "clickable" command in the dashboard.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent">
            <summary>
            Interface for objects that define dashboard content.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent.Generate(System.Xml.XmlDocument)">
            <summary>
            Generates the object's xml content.
            </summary>
            <param name="xml">The xml document the content is generated for.</param>
            <returns>The xml content.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.Generate(System.Xml.XmlDocument)">
            <summary>
            Renders the command.
            </summary>
            <param name="xml">The html document the command will be added to.</param>
            <returns>The command's xml fragment.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.GetAttributeSafe(System.String)">
            <summary>
            Helper method to access attributes safely, even if they aren't defined.
            </summary>
            <param name="name">The name of the attribute to get the value for.</param>
            <returns>The value of the attribute if it exists, null otherwise.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.Title">
            <summary>
            The title of the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.ToolTip">
            <summary>
            The tooltip (mouse hover text) of the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.Style">
            <summary>
            The style indicating how the command should be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand.Attributes">
            <summary>
            Simple access to the command element attributes that will be used when generating the xml.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardContentCollection">
            <summary>
            Combines multiple pieces of dashboard content into a single piece of content.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardContentCollection.Generate(System.Xml.XmlDocument)">
            <summary>
            Combines all content items generated xml into one fragment.
            </summary>
            <param name="xml">The xml document the content is created for.</param>
            <returns>The combined content.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.XmlContentGenerator">
            <summary>
            Custom XML content generator.
            </summary>
            <param name="xml">The xml document the xml content is being created for.</param>
            <returns>The cusom xml content.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.HtmlContentGenerator">
            <summary>
            Custom HTML content generator.
            </summary>
            <returns>Valid html markup.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent">
            <summary>
            Simple <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent"/> implementation for defining or generating
            custom xml or html content.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.xmlGenerator">
            <summary>
            The method to delegate XML generation to.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.htmlGenerator">
            <summary>
            The method to delegate HTML string generation to.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.htmlContent">
            <summary>
            The static html content.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.#ctor(System.String)">
            <summary>
            Custom, static HTML content.
            </summary>
            <param name="htmlContent"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.#ctor(MFiles.VAF.Configuration.Domain.Dashboards.XmlContentGenerator)">
            <summary>
            Constructor
            </summary>
            <param name="xmlGenerator">Custom XML content generator.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.#ctor(MFiles.VAF.Configuration.Domain.Dashboards.HtmlContentGenerator)">
            <summary>
            Custom HTML content generator.
            </summary>
            <param name="htmlGenerator"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardCustomContent.Generate(System.Xml.XmlDocument)">
            <summary>
            Creates the xml of the content. 
            </summary>
            <param name="xml">The xml document the content is created for.</param>
            <returns>The custom content.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardDomainCommand">
            <summary>
            Represents a dashboard command that triggers a domain command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardDomainCommand.DomainCommandID">
            <summary>
            The domain command id to trigger when the command is activated.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper">
            <summary>
            Dashboard creation helpers for the configurator.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.ToParagraphs(System.Xml.XmlDocument,System.String)">
            <summary>
            Converts a raw text value to html paragraphs,
            splitting the content by new lines.
            </summary>
            <param name="xml">The xml document to which the paragraphs will be added.</param>
            <param name="text">The text to convert to paragraphs.</param>
            <returns>The xml fragment of paragraphs and text.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.FormatDashboardContentString(System.Xml.XmlDocument,System.String,MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent[])">
            <summary>
            In a fashion similar to String.Format() this takes a formatted string with
            positional placeholders, and replaces them with content generated from the
            IDashboardContent item at the corresponding position.
            </summary>
            <remarks>
            This is useful for injecting markup inside text. For instance, a sentence,
            where one word should be a link.
            </remarks>
            <param name="xml">The xml document to which the resutling fragment will be added.</param>
            <param name="format">The format string.</param>
            <param name="contentItems">The items whose content will replace the format string's placeholders</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateDomainStatusDashboard(MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Creates a generic dashboard based on a <see cref="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain"/> definition.
            </summary>
            <param name="domain">The domain to generate the dashboard for.</param>
            <returns>The domain's dashboard.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateSubDomainListItem(MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Creates a generic <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem"/> based on a <see cref="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain"/>.
            </summary>
            <param name="subDomain">The domain to create the list item for.</param>
            <returns>The list item representing the domain.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.GetConfigurationPath(System.String)">
            <summary>
            Resolves the path to a domain's configuration node.
            </summary>
            <param name="domainID">The id of the domain whose configuration node the path will point to.</param>
            <returns>The configuration node path.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddSelectNodeBehavior(System.Xml.XmlElement,System.String)">
            <summary>
            Adds behavior to an element, so that when it is clicked/activated
            the configurator will navigate to the tree node at the nodePath specified.
            </summary>
            <param name="elem">The element to add the behavior to.</param>
            <param name="nodePath">The node path to navigate to.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddSelectNodeBehavior(MFiles.VAF.Configuration.Domain.Dashboards.DashboardCommand,System.String)">
            <summary>
            Adds behavior to a command, so that when it is clicked/activated
            the configurator will navigate to the tree node at the nodePath specified.
            </summary>
            <param name="dashboardCmd">The command to add the behavior to.</param>
            <param name="nodePath">The node path to navigate to.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateSelectDomainNodeCommand(MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Creates a command that when clicked/activated will navigate to a
            domain's tree node in the configurator's navigation pane.
            </summary>
            <param name="domain">The domain to navigate to.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateSelectDomainNodeCommand(System.String,System.String)">
            <summary>
            Creates a command that when clicked/activated will navigate to a
            domain's tree node in the configurator's navigation pane.
            </summary>
            <param name="domainID">The domain to navigate to.</param>
            <param name="title">The title of the command.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateSelectConfigurationNodeCommand(System.String)">
            <summary>
            Creates a command that when clicked/activated will navigate to a
            domain's configuration tree node in the configurator's navigation pane.
            Uses default configure label.
            </summary>
            <param name="domainID">The domain whose configuration node to navigate to.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateSelectConfigurationNodeCommand(System.String,System.String)">
            <summary>
            Creates a command that when clicked/activated will navigate to a
            domain's configuration tree node in the configurator's navigation pane.
            </summary>
            <param name="domainID">The domain whose configuration node to navigate to.</param>
            <param name="title">The title of the command.</param>
            <returns>The command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateDomainCommand(MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand)">
            <summary>
            Converts a domain command into a dashboard command.
            When clicked/activated, the domain command will be triggered.
            </summary>
            <param name="domainCmd">The domain command.</param>
            <returns>The dashboard command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateDomainCommand(System.String,System.String,System.String)">
            <summary>
            Converts a domain command into a dashboard command.
            When clicked/activated, the domain command will be triggered.
            </summary>
            <param name="title">The title of the command.</param>
            <param name="domainCmdId">The id of the domain command.</param>
            <param name="tooltip">The tooltip text for the command.</param>
            <returns>The dashboard command.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddRunDomainCommandBehavior(System.Xml.XmlElement,System.String)">
            <summary>
            Adds behavior to an xml element so that when clicked/activated,
            it triggers a domain command.
            </summary>
            <param name="elem">The element to add the behavior to.</param>
            <param name="domainCmdID">The id of the domain command to trigger.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddRefreshContentBehavior(System.Xml.XmlElement,System.String,System.Int32)">
            <summary>
            Adds behavior to an xml element so that its content will 
            refresh at the specified interval.
            </summary>
            <param name="elem">The element whose content should be refreshed periodically.</param>
            <param name="domainCmdID">The id of the domain command that returns the updated content.</param>
            <param name="intervalSeconds">The interval at which the content should be refreshed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.GetStatusIconClass(MFiles.VAF.Configuration.Domain.DomainStatus)">
            <summary>
            Resolves the class name to use for a status value.
            </summary>
            <param name="status">The status to resolve the icon class for.</param>
            <returns>The corresponding class name.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.GetIconSizeClass(MFiles.VAF.Configuration.Domain.Dashboards.IconSize)">
            <summary>
            Resolves the class name to use for a particular icon size.
            </summary>
            <param name="size">The size of the icon.</param>
            <returns>The corresponding class name.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.ImageFileToDataUri(System.String)">
            <summary>
            Converts an image file's content into a base64 encoded data uri.
            </summary>
            <param name="imgPath">The path to the image file (on the server).</param>
            <returns>Base64 encoded data uri.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Creates an xml element and it's inner content from markup.
            </summary>
            <param name="xml">The xml document the element will be used in.</param>
            <param name="html">The html markup of the element and its content.</param>
            <returns>The xml element.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CreateFragment(System.Xml.XmlDocument,System.String)">
            <summary>
            Creates an xml fragment from html markup.
            </summary>
            <param name="xml">The xml document the fragment will be used in.</param>
            <param name="html">The html markup of the fragment.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddClass(System.Xml.XmlElement,System.String)">
            <summary>
            Utility method for adding a class to an element.
            Concatenates the classname (separated by a space) to the class attribute if already defined.
            </summary>
            <param name="elem">The element to add the class to.</param>
            <param name="className">The class name to add.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.AddStyle(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Utility method for adding a style rule property/value to an element.
            Concatenates the style rule to the existing style attribute, if already defined.
            </summary>
            <param name="elem">The element to add the style rule to.</param>
            <param name="property">The rule property to add.</param>
            <param name="value">The value or the rule property to add.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.ToXmlFragment(MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent)">
            <summary>
            Converts an <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent"/> to an xml fragment in
            an undefined xml document.
            </summary>
            <param name="content">The content to convert to a fragment.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.ToXmlString(MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent)">
            <summary>
            Converts an <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.IDashboardContent"/> to a string.
            </summary>
            <param name="content">The content to convert.</param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes">
            <summary>
            Custom html tag attributes understood by the configurator.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.SelectTreeNode">
            <summary>
            Value should be a valid node path in the configurator's navigation pane.
            When set, the element will become a link, that when activated,
            will navigate to the node at specified node path.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.DomainCommand">
            <summary>
            Value should be the id of a domain command.
            When set, the element will becomome a link, that when activated,
            will trigger the specified domain command.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.ContentCommand">
            <summary>
            Value should be the id of a domain command.
            Attribute should be used together with the <see cref="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.ContentTarget"/> 
            attribute or the <see cref="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.RefreshInterval"/> attribute.
            When set, the element will become a link, that when activated,
            will trigger the specified domain command, and use the content
            returned by the command to update the content of the element
            referenced in the data-contenttarget attribute.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.RefreshInterval">
            <summary>
            Value should be the id of a domain command.
            Attribute should be used together with the <see cref="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.ContentCommand"/> attribute.
            When set, the element will automatically call the domain command
            at the defined interval, and replace the inner html content of
            the element with the content returned by the command.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.ContentTarget">
            <summary>
            Value should the the id of an element inside the dashboard.
            Attribute should be used together with the <see cref="F:MFiles.VAF.Configuration.Domain.Dashboards.DashboardHelper.CustomAttributes.ContentCommand"/> attribute.
            The element referenced in will have its inner html content updated to that which 
            was returned when the sibling content command is executed.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink">
            <summary>
            Creates a link (anchor element) for a dashboard. 
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink.#ctor">
            <summary>
            No arg constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink.#ctor(System.String,System.String)">
            <summary>
            Basic constructor.
            </summary>
            <param name="name">The name of the link.</param>
            <param name="url">The location of of the link.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink.Generate(System.Xml.XmlDocument)">
            <summary>
            Generate the xml content.
            </summary>
            <param name="xml">The xml document the content will be added to.</param>
            <returns>The xml content.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink.Name">
            <summary>
            The name of the link.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardLink.Url">
            <summary>
            The location of the link.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardText">
            <summary>
            Converts plain text to html content by splitting the text
            into paragraphs by newline characters.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardText.#ctor">
            <summary>
            No arg constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardText.#ctor(System.String)">
            <summary>
            Basic constructor.
            </summary>
            <param name="text">The text content.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardText.Generate(System.Xml.XmlDocument)">
            <summary>
            Generate the xml content.
            </summary>
            <param name="xml">The xml document the content will be added to.</param>
            <returns>The xml content.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardText.Text">
            <summary>
            The plain text to convert to content.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.IconSize">
            <summary>
            Defines sizes for configuration dashboard icons.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.Normal">
            <summary>
            16px
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.Tiny">
            <summary>
            12px
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.Small">
            <summary>
            16px
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.Medium">
            <summary>
            24px
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.Large">
            <summary>
            32px
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.IconSize.ExtraLarge">
            <summary>
            48px
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList">
            <summary>
            Represents a top-level listing in a dashboard.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.Generate(System.Xml.XmlDocument)">
            <summary>
            Renders the list.
            </summary>
            <param name="xml">The html document the list will be added to.</param>
            <returns>The list's xml fragment.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.ID">
            <summary>
            The id of the list. Optional.
            Will appear in the html output, so the list can be referenced.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.Title">
            <summary>
            The title of the listing (optional).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.Commands">
            <summary>
            The top-level commands for the listing (optional).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList.Items">
            <summary>
            The list's items.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem">
            <summary>
            Represents a list item shown in a <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardList"/>. 
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.Generate(System.Xml.XmlDocument)">
            <summary>
            Renders the list item.
            </summary>
            <param name="xml">The html document the list item will be added to.</param>
            <returns>The list item xml fragment.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.ID">
            <summary>
            The id of the list item. Optional.
            Will appear in the html output, so the item can be referenced.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.Icon">
            <summary>
            A path to the icon to use for the list item (optional).
            Should resolve to a file on either the server or client configurator app.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.Title">
            <summary>
            The title of the list item. Should be set.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.StatusSummary">
            <summary>
            The status of the list item (optional).
            If specified, rendered as a <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub"/>. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.Commands">
            <summary>
            Commands (links/buttons) to show for the list item.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.InnerContent">
            <summary>
            The free content to show for the list item.
            For most lists, this should be kept short.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardListItem.TreePath">
            <summary>
            The domain tree path this list item represents (optional).
            If specified, the title will become a link that navigates
            to the tree node at the path in the configurator's navigation pane.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.PanelBackground">
            <summary>
            Panel Background.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.PanelBackground.None">
            <summary>
            No panel background.
            Default
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.Dashboards.PanelBackground.Primary">
            <summary>
            Primary panel background.
            Currently blue.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel">
            <summary>
            Represents a simple panel in a <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.Generate(System.Xml.XmlDocument)">
            <summary>
            Generates the panel content as xml.
            </summary>
            <param name="xml">The xml document the panel will be added to.</param>
            <returns>The panel xml.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.ID">
            <summary>
            The id of the panel.
            Optional.
            Will appear in the html output, so the panel can be referenced.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.Icon">
            <summary>
            The primary icon to show in the panel (optional).
            Should resolve to a file on either the server or client configurator app.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.Title">
            <summary>
            The title of the panel (optional).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.StatusSummary">
            <summary>
            The status of the panel (optional).
            If specified, rendered as a <see cref="T:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub"/>. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.Commands">
            <summary>
            The top-level commands to show for the panel (optional).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.InnerContent">
            <summary>
            The panel content (optional).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.DashboardPanel.Background">
            <summary>
            Controls the panel background color.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.SelectTreeNodeCommand">
            <summary>
            Represents a dashboard command that navigates to another
            tree node in the configurator's navigation pane.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.SelectTreeNodeCommand.NodePath">
            <summary>
            The path to the tree node to navigate to when the command is activated (clicked).
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard">
            <summary>
            Represents a <see cref="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain"/>'s status dashboard.
            Combines various pieces of content and generates a well formed html element containing it.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.Generate">
            <summary>
            Generates an XML document from the current dashboard contents.
            </summary>
            <returns>Generated xml document.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.ToString">
            <summary>
            Generates an html string representing the current dashboard contents.
            </summary>
            <returns>HTML text.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.Contents">
            <summary>
            The contents of the dashboard.
            Will be rendered in order.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.RefreshInterval">
            <summary>
            The interval (in seconds) at which the client should refresh/update the dashboard.
            If an <see cref="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.UpdateCommand"/> is defined, it will be called to refresh the
            dashboard, otherwise the whole dashboard will be refreshed from the source defined
            in the domain.
            Value is ignored if less than 1. Low values should be used with caution.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.UpdateCommand">
            <summary>
            The id of a domain command to call to trigger dashboard updates at the defined <see cref="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.RefreshInterval"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusDashboard.ShowUserErrors">
            <summary>
            Determines if dashboard update/refresh errors are shown to the user.  Many transient errors can occur
            with updates if the vault or application is restarting so typically these are ignored.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub">
            <summary>
            Creates a html structure representing a <see cref="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub.StatusSummary"/>.
            Rendering the lable and/or status icon if defined, and also showing
            the description as a tooltip if available.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub.#ctor(MFiles.VAF.Configuration.Domain.DomainStatusSummary)">
            <summary>
            Constructor.
            </summary>
            <param name="statusSummary">The status to render.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub.Generate(System.Xml.XmlDocument)">
            <summary>
            Renders the status stub
            </summary>
            <param name="xml">The html document the status stub will be added to.</param>
            <returns>The list item xml fragment.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Dashboards.StatusStub.StatusSummary">
            <summary>
            The status to render.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.DomainMenuCommandLocation">
            <summary>
            Defines a command location inside the <see cref="F:MFiles.VAF.Configuration.Domain.CommandContainer.DomainContextMenu"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.DomainMenuCommandLocation.#ctor(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="priority">Determines the command button's location inside the menu.</param>
            <param name="icon">The name of the icon that will be shown next to the menu item.</param>
            <param name="separatorBefore">Creates a separator before this menu item.</param>
            <param name="noSeparatorAfter">Prevents any line separators from being drawn after this item.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.DomainMenuCommandLocation.Container">
            <summary>
            Indicates the container in which the command is shown.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.DomainStatus">
            <summary>
            Generic domain states.
            Each domain decides freely which state it is in, if any.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.DomainStatus.Undefined">
            <summary>
            No state defined or available.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.DomainStatus.Disabled">
            <summary>
            Disabled.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.DomainStatus.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.DomainStatus.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.DomainStatus.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.DomainStatusSummary">
            <summary>
            Defines a domain's status.
            Currently used for display purposes only.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.DomainStatusSummary.Status">
            <summary>
            The status of the domain.
            Optional.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.DomainStatusSummary.Label">
            <summary>
            The display name for the domain's status.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.DomainStatusSummary.Description">
            <summary>
            Further description of the domain's status.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ClientDirectiveType">
            <summary>
            Directives available for controlling the behavior of the
            configurator client with responses to a domain's custom commands.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.ShowMessage">
            <summary>
            Directive to show a message to the user.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.AddDomain">
            <summary>
            Directive to add a domain to the navigation tree.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.RemoveDomain">
            <summary>
            Directive to remove a domain from the navigation tree.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.ReloadDomain">
            <summary>
            Removes and then re-adds a domain.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.AuthenticateUser">
            <summary>
            Directive to authenticate a user.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.RevalidateDomain">
            <summary>
            Directive to revalidate a domain.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.RefreshDashboard">
            <summary>
            Directive to refresh a domain's dashboard.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.LoadConfiguration">
            <summary>
            Directive to load new configuration content for a domain into the editor.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.UpdateStatusSummary">
            <summary>
            Directive containing a new status summary for a domain.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.UpdateCommands">
            <summary>
            Directive containing a full, updated list of available domain commands.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.UpdateDashboardContent">
            <summary>
            Directive containing updated dashboard content for the domain.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.UpdateDomain">
            <summary>
            Directive containing that updates part of a domain definition, or
            values loaded for it.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.ShowModalDashboard">
            <summary>
            Directive containing dashboard content to show in a modal dialog to the user.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ClientDirectiveType.RefreshMetadataCache">
            <summary>
            Directive that triggers a metadata structure cache refresh on the client.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.CommandContainer">
            <summary>
            Containers in which <see cref="T:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand"/>s can be displayed.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandContainer.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandContainer.DomainButtonBar">
            <summary>
            Domains Button Bar.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandContainer.DomainContextMenu">
            <summary>
            Domains Context Menu.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.CommandContainer.ConfigurationContextMenu">
            <summary>
            Configurations Context Menu.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute">
            <summary>
            Describes the attributes of a Dynamic List ( IE: Subscribe-able collection ).
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IJsonConfEditorAttr">
            <summary>
            Common Interface for classes that allow the JsonSchemaGenerator to pull option values,
            Note: This is not yet the Type filtered by in the SchemaGenerator. Meaning that simply 
            implementing this interface and decorating a Configuration class member will not result
            in the value showing up in the options.  For now, you need to extend the JsonConfEditorAttribute
            class, although this may be broadened in scope in the future to use this interface.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IJsonConfEditorAttr.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IJsonConfEditorAttr.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute.#ctor">
            <summary>
            Default parameter-less constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute.ListName">
            <summary>
            Name of the subscribe-able collection.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicList.DynamicListBaseAttribute.RootAncestorOffset">
            <summary>
            Used to calculate the root ancestor path to which this reference-able item has been defined for.
            Example: ThisItem( Offset = 0) -> ParentItem( Offset 1 ) -> GrandParentItem( Offset = 2 )
            When no offset is defined, the current item will be used as the root item.
            Note: This is only used when the subscriber is filtered.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicList.DynamicListRootAttribute">
            <summary>
            Denotes a property on a class that is the root item containing a collection of sub-trees.
            These sub-trees, while stored within the root list on the associated EditeableItem are handled independent of one another.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListRootAttribute.HasOptions">
            <summary>
            Checks if any list names are defined for this member.
            </summary>
            <returns>True / False</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListRootAttribute.GetOptions">
            <summary>
            Gets any list names defined for this member.
            </summary>
            <returns>Options expando.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicList.DynamicListRootAttribute.ListNames">
            <summary>
            The property grid allows for each root list item to have a subtree, which have 
            their own list to be handled independently of the top-most root list. Each EditableItem may declare
            itself as the context root item for one or more dynamic lists within the 
            DynamicListRootAttribute -> ListNames as a new string[] 
            { 
              "ListForWhichThisItemIsTheRoot1", 
              "ListForWhichThisItemIsTheRoot2" 
            }
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicList.FilterMode">
            <summary>
            Defines the filtering styles that can be used by subscribers to reduce the members they see.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.DynamicList.FilterMode.None">
            <summary>
            No filter behavior.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.DynamicList.FilterMode.Ancestors">
            <summary>
            Members with the same root ancestor or with a root ancestor that is an ancestor of the 
            subscriber's root ancestor will be returned.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.DynamicList.FilterMode.Descendants">
            <summary>
            Members with the same root ancestor or with a root ancestor that is a descendent of the 
            subscriber's root ancestor will be returned.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.DynamicList.FilterMode.AncestorsAndDescendants">
            <summary>
            Members with the same root ancestor or with a root ancestor that is an ancestor or 
            descendent of the subscriber's root ancestor will be returned.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicList.DynamicListSubscriberAttribute">
            <summary>
            Describes the attributes of a Dynamic List Subscriber( IE: Listens to a Subscribe-able collection for changes ).
            Uses the subscribe-able list as a value source.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListSubscriberAttribute.#ctor">
            <summary>
            Default parameter-less constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListSubscriberAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicList.DynamicListSubscriberAttribute.FilterMode">
            <summary>
            The filtering mode used by the subscriber to limit the lists members that it subscribes to.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicPropertyValueSetter">
            <summary>
            Property value resolution class, used for static and dynamic value resolution.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicPropertyValueSetter.Property">
            <summary>
            Property for which the value is to be set.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.DynamicPropertyValueSetter.Value">
            <summary>
            Value to set on the property.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.DateTimeExtensions">
            <summary>
            Extension methods for DateTime handling.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DateTimeExtensions.ToTimestamp(System.DateTime)">
            <summary>
            Converts DateTime to Timestamp while preserving the milliseconds.
            The output is always in local time. If the dateTime object is marked
            as UTC, it will be switched to local time before the conversion.
            </summary>
            <param name="dateTime">The dateTime object to convert.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.DateTimeExtensions.ToDateTime(MFilesAPI.Timestamp)">
            <summary>
            Converts Timestmp to DateTime while preserving the milliseconds of the nanosecond fraction.
            The method assumes that the timestamp represents local time, and generates
            a dateTime object of local time.
            </summary>
            <param name="timestamp">The timestmp object to convert.</param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration">
            <summary>
            The basic authentication provider configuration class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.Assembly">
            <summary>
            Assembly that provides the authentication.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.PluginInfoScope">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.PluginInfoScopeIndependent">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.BasicAuthenticationProviderConfiguration.PluginInfoBridgeClass">
            <summary>
            Plugin Info value for BridgeClass.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration">
            <summary>
            The LDAP authentication provider configuration class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.Assembly">
            <summary>
            Assembly that provides the authentication.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.LDAPServerAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.LDAPServerPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.LDAPServerConnectionTimeOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.LDAPServerProtocolVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.LDAPServerAuthenticationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.UserDNPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.Domain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.ClientCertificatePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.UseSSL">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.VerifyServerCertificate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.ServerCertificateRevocationMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.PluginInfoScope">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.PluginInfoScopeIndependent">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.LdapProviderConfiguration.PluginInfoBridgeClass">
            <summary>
            Plugin Info value for BridgeClass.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration">
            <summary>
            The OAuth authentication provider configuration class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.Assembly">
            <summary>
            Assembly that provides the authentication.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.AuthorizationEndpoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.TokenEndpoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.ClientID">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.ClientSecret">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.ClearCookiesOfDomainsBeforeElectronicSignature">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.AuthenticationPurpose">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.EnableLogging">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.PromptLoginParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.SiteRealm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.GrantType">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.RedirectURI">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.UseIdTokenAsAccessToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.PluginInfoScope">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.PluginInfoScopeIndependent">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.OAuthProviderConfiguration.PluginInfoBridgeClass">
            <summary>
            Plugin Info value for BridgeClass.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration">
            <summary>
            The SAML authentication provider configuration class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.Assembly">
            <summary>
            Assembly that provides the authentication.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderEntityID">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderCertificate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderCertificateFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderCertificateSerialNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderCertificateThumbprint">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ServiceProviderCertificateSubject">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.IdPInitiatedSloUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.SingleSignOnServiceBinding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.SingleSignOnServiceUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.EnableLogging">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.AuthenticationPurpose">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.AssertionConsumerServiceUrlForNative">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.AssertionConsumerServiceUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ClearAuthenticationCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.ClearCookiesOfDomainsBeforeElectronicSignature">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.SignAuthnRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.PluginInfoScope">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.PluginInfoScopeIndependent">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.SamlProviderConfiguration.PluginInfoBridgeClass">
            <summary>
            Plugin Info value for BridgeClass.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration">
            <summary>
            The ADFS authentication provider configuration class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.ADFSServer">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.ADFSEndpointUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.ADFSEndpointWindows">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.CurrentWindowsUser">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.RPID">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.AuthenticationPurpose">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.EnableLogging">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.AllowInteractive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.PluginInfoScope">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.PluginInfoScopeIndependent">
            <summary>
            Plugin Info value for Scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationProviderConfiguration.AdfsProviderConfiguration.PluginInfoBridgeClass">
            <summary>
            Plugin Info value for BridgeClass.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain">
            <summary>
            Defines a configuration domain for use in the generic json configuration editor.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.StorageType">
            <summary>
            The named value storage type where vault application domains are registered.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.RegisterDomain(MFilesAPI.Vault,System.String,MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Registers an application domain in the vault.
            The domain's id will be used as the registration key.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which to register the domain.</param>
            <param name="domain">The domain to regiser.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.RegisterDomain(MFilesAPI.Vault,System.String,System.String,MFiles.VAF.Configuration.Domain.Source)">
            <summary>
            Registers an application domain in the vault.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which to register the domain.</param>
            <param name="key">The key to register the application under (typically the domain id).</param>
            <param name="source">The source to load the domain definition from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.RegisterDomain(MFilesAPI.Vault,System.String,System.String,MFiles.VAF.Configuration.Domain.SourceDefinition)">
            <summary>
            Registers an application domain in the vault.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which to register the domain.</param>
            <param name="key">The key to register the application under (typically the domain id).</param>
            <param name="sourceDef">The source to load the domain definition from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.RegisterDomain(MFilesAPI.Vault,System.String,System.String,MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource)">
            <summary>
            Registers an application domain in the vault.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which to register the domain.</param>
            <param name="key">The key to register the application under (typically the domain id).</param>
            <param name="domainOrSource">The domain or the source to load the domain definition from.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.ClearDomainRegistrations(MFilesAPI.Vault,System.String)">
            <summary>
            Clears the given domain namespace from domain registrations.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="domainNamespace">The namespace that is cleared.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.UnregisterDomain(MFilesAPI.Vault,System.String,MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Unregisters an application domain from the vault assuming it has been registered with it's id.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which the domain is registered.</param>
            <param name="domain">The domain that is registered.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomain.UnregisterDomain(MFilesAPI.Vault,System.String,System.String)">
            <summary>
            Unregisters an application domain from the vault assuming it has been registered with it's id.
            </summary>
            <param name="vault">The vault in which to register the domain.</param>
            <param name="domainNamespace">The namespace in which the domain is registered.</param>
            <param name="key">The key under which the domain is registered.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.ID">
            <summary>
            Defines the id for the configuration domain.
            Should be unique (name-spaced name recommended).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.DisplayName">
            <summary>
            Human-readable name for the domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Description">
            <summary>
            Optional description of the configuration domain.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.SubDomains">
            <summary>
            The domain's subdomains or the source definition to use to load them.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Configuration">
            <summary>
            The domain's configuration source (readable/writable) if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Schema">
            <summary>
            The domains schema or schema source definition, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Validation">
            <summary>
            The domain's validation source definition, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.StatusDashboard">
            <summary>
            The domain's dashboard source definition, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Commands">
            <summary>
            The domain's custom commands if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.SortPriority">
            <summary>
            The priority in which this domain should be listed amongst other domains.
            Domains with larger sortPrioriity values will appear earlier/higher in listings.
            Domains with the same/no priority will be sorted alphabetically.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.StatusSummary">
            <summary>
            The domain's status source definition, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Initializers">
            <summary>
            Directives used to initialize the domain on the client. This can be used to package the domain
            with the results of domain definied sources, without the client needing to follow those sources
            itself initially. This can reduce the number of server calls that need to be made when first
            loading a domain, improving performance, especially in cases of high latency.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain.DefaultNamespaces">
            <summary>
            The default named value namespaces where the domains are registered.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.DefaultNamespaces.ApplicationDomains">
            <summary>
            Application Domains.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.DefaultNamespaces.ConnectorDomains">
            <summary>
            Connector Domains.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.DefaultNamespaces.ProviderDomains">
            <summary>
            Provider Domains.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities">
            <summary>
            Capabilities is a bitwise operation capable enumeration of the features that the ConfigurationDomain supports.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.SubDomains">
            <summary>
            Sub Domain.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.Schema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.Validation">
            <summary>
            Validation.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.StatusDashboard">
            <summary>
            Status Dashboard.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.Commands">
            <summary>
            Commands.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.ConfigurationDomain.Capabilities.StatusSummary">
            <summary>
            Status Summary.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand">
            <summary>
            Defines a command that can be exposed and triggered for a domain via the json configurator.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand">
            <summary>
            Defines a command that can be exposed and triggered for a domain via the json configurator.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.ID">
            <summary>
            A unique identifier for the command.
            Can be used to reference the command in status dashboards.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.DisplayName">
            <summary>
            The display name to use for the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.HelpText">
            <summary>
            Help text to expose for the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.ExtensionMethod">
            <summary>
            The extension method to call when the command is triggered.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.Locations">
            <summary>
            A list of locations specifying where and how the command will be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IConfigurationDomainCommand.ConfirmMessage">
            <summary>
            If specified, the message will be displayed to the user in a confirmation dialog after they've
            triggered the command, but before its execution. They will have the option to procede or
            cancel the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.ID">
            <summary>
            A unique identifier for the command.
            Can be used to reference the command in status dashboards.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.DisplayName">
            <summary>
            The display name to use for the command. Optional.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.HelpText">
            <summary>
            Help text to expose for the command. Optional.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.ExtensionMethod">
            <summary>
            The extension method to call when the command is triggered.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.Locations">
            <summary>
            A list of locations specifying where and how the command will be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.ConfirmMessage">
            <summary>
            If specified, the message will be displayed to the user in a confirmation dialog after they've
            triggered the command, but before its execution. They will have the option to procede or
            cancel the command.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommand.Blocking">
            <summary>
            Indicates whether the interface should be blocked while the command is being executed.
            Useful for longer running commands where further user interaction with the interface
            could negatively effect user experience or execution, or simply a way to indicate to the
            user that something is happening, and when it is over.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource">
            <summary>
            Proxy to a ConfigurationDomain or its source definition.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1">
            <summary>
            A generic proxy for accessing a value or a source for obtaining the value.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.IValueOrValueSource">
            <summary>
            A proxy interface for accessing a value or a source for obtaining the value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IValueOrValueSource.HasSource">
            <summary>
            Indicates whether a source is defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IValueOrValueSource.HasValue">
            <summary>
            Indicates whether a value is defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IValueOrValueSource.Source">
            <summary>
            The value source, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.IValueOrValueSource.Value">
            <summary>
            The value, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1.HasSource">
            <summary>
            Indicates whether a source is defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1.HasValue">
            <summary>
            Indicates whether a value is defined.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1.Source">
            <summary>
            The value source, if any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1.Value">
            <summary>
            The value, if defined.
            Typically the TypedValue property should be used for setting.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSource`1.TypedValue">
            <summary>
            The typed value, if defined.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource.op_Implicit(MFiles.VAF.Configuration.Domain.ConfigurationDomain)~MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource">
            <summary>
            Convert/Wrap ConfigurationDomain to ConfigurationDomainOrSource.
            </summary>
            <param name="domain">The ConfigurationDomain to convert.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource.op_Implicit(MFiles.VAF.Configuration.Domain.SourceDefinition)~MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource">
            <summary>
            Convert/Wrap a SourceDefinition to ConfigurationDomainOrSource.
            </summary>
            <param name="sourceDef">The SourceDefinition to convert.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource.op_Implicit(MFiles.VAF.Configuration.Domain.Source)~MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource">
            <summary>
            Convert/Wrap a Source to ConfigurationDomainOrSource.
            </summary>
            <param name="source">The Source to convert.</param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource">
            <summary>
            Proxy to a List of Domains and/or Domain Sources, or a list source definition.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource.Add(MFiles.VAF.Configuration.Domain.ConfigurationDomain)">
            <summary>
            Adds a domain to the list of domains.
            </summary>
            <param name="domain">The domain to add.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource.Add(MFiles.VAF.Configuration.Domain.Source)">
            <summary>
            Adds a domain source to the list of domains.
            </summary>
            <param name="source">The domain to add.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource.Add(MFiles.VAF.Configuration.Domain.SourceDefinition)">
            <summary>
            Adds a domain source definition to the list of domains.
            </summary>
            <param name="sourceDef">The domain to add.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainsOrSource.Add(MFiles.VAF.Configuration.Domain.ConfigurationDomainOrSource)">
            <summary>
            Adds a domain or source to the list of domains.
            </summary>
            <param name="domainOrSource">The domain or source to add.</param>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.AuthenticationRequest">
            <summary>
            Defines the authentication request.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.AuthenticationRequest.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.RepositoryId">
            <summary>
            The target repository id.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.RepositoryDiplayName">
            <summary>
            The target repository name.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.AccountIdentifier">
            <summary>
            The identifier of the account that should be authenticated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.Name">
            <summary>
            Name of the authentication configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.AssemblyName">
            <summary>
            The assembly name of the plugin.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.IsDefault">
            <summary>
            Is default plugin.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.IsScopeIndependent">
            <summary>
            Is usable independently of any scope.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.BridgeClassName">
            <summary>
            The class name of the COM bridge.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.AuthenticationRequest.Configuration">
            <summary>
            The plugin configuration.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommandResponse">
            <summary>
            Response to a domain's custom command.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommandResponse.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ConfigurationDomainCommandResponse.Directives">
            <summary>
            Defines a list of directives to process on the client.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall">
            <summary>
            Defines a how an extended VaultExensionMethod can be called.
            Assumes that the Input is a JSON object.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall.ApplicationGuid">
            <summary>
            The target vault application GUID.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall.Service">
            <summary>
            The target vault service name.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall.Instance">
            <summary>
            The target configuration instance name.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall.Method">
            <summary>
            The name of the vault extension method.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodCall.Input">
            <summary>
            The parameters for the vault extension method.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodSource">
            <summary>
            Defines a vault extension method call to obtain (read) a value from the vault.
            Also allows defining a vault extension method call to update (write) a value in the vault.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.Source">
            <summary>
            Defines a data source.
            All implementations must have a source handler defined in javascript.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.Source.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.IMethodSource">
            <summary>
            Defines an interface that is used to mark extension method based data sources.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodSource.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodSource.Read">
            <summary>
            A vault extension method call used to obtain (read) a value from the vault.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ExtendedVaultExtensionMethodSource.Write">
            <summary>
            A vault extension method call used to update (write) a value in the vault.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.NamedValueKeySource">
            <summary>
            Defines a specific value location in named value storage.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.NamedValueKeySource.ReadValue(MFilesAPI.Vault)">
            <summary>
            Read and return the value.
            </summary>
            <param name="vault">Vault to operate on.</param>
            <returns>The value as string.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.NamedValueKeySource.SaveValue(MFilesAPI.Vault,System.String)">
            <summary>
            Save the value to NVS.
            </summary>
            <param name="vault">Vault to operate on.</param>
            <param name="value">Value to save.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueKeySource.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueKeySource.Type">
            <summary>
            The type of storage used for the value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueKeySource.Namespace">
            <summary>
            The namespace of the value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueKeySource.Key">
            <summary>
            The namespace key for the value.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.NamedValueNamespaceSource">
            <summary>
            Defines the location of namespaced values in name value storage.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueNamespaceSource.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueNamespaceSource.Type">
            <summary>
            The type of storage used for the values.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.NamedValueNamespaceSource.Namespace">
            <summary>
            The namespace of the values.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.SchemaOrSource">
            <summary>
            Proxy to a Schema or its source definition.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.SchemaOrSource.op_Implicit(MFiles.VAF.Configuration.JsonEditor.Schema)~MFiles.VAF.Configuration.Domain.SchemaOrSource">
            <summary>
            Convert/Wrap schema to SchemaOrSource.
            </summary>
            <param name="schema">The schema to convert.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.SchemaOrSource.op_Implicit(MFiles.VAF.Configuration.Domain.SourceDefinition)~MFiles.VAF.Configuration.Domain.SchemaOrSource">
            <summary>
            Convert/Wrap a SourceDefinition to SchemaOrSource.
            </summary>
            <param name="sourceDef">The source definition to convert.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.SchemaOrSource.op_Implicit(MFiles.VAF.Configuration.Domain.Source)~MFiles.VAF.Configuration.Domain.SchemaOrSource">
            <summary>
            Convert/Wrap a Source to SchemaOrSource.
            </summary>
            <param name="source">The source to convert.</param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.MethodSourceDefinition">
            <summary>
            Wrapper for method sources to expose the name of the source for json serialization.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.SourceDefinition">
            <summary>
            Wrapper for sources to expose the name of the source for json serialization.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.Domain.SourceDefinition.source">
            <summary>
            Protected field for storing the Source property.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.SourceDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.SourceDefinition.#ctor(MFiles.VAF.Configuration.Domain.Source)">
            <summary>
            Constructor.
            </summary>
            <param name="source">The source to wrap.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.SourceDefinition.SourceType">
            <summary>
            Exposes the name of the source in the wrapper.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.SourceDefinition.Source">
            <summary>
            The wrapped source.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.MethodSourceDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.MethodSourceDefinition.#ctor(MFiles.VAF.Configuration.Domain.IMethodSource)">
            <summary>
            Constructor.
            </summary>
            <param name="methodSource">The method source to wrap.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.MethodSourceDefinition.Source">
            <summary>
            The wrapped source.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter">
            <summary>
            Json converter for implementations of ValueOrValueSource&lt; &gt;.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter.CanConvert(System.Type)">
            <summary>
            Can the object be converted with this.
            </summary>
            <param name="objectType">The type of object to be converted.</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The JsonWriter to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter.CanRead">
            <summary>
            Indicates whether the converter can parse json.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.ValueOrValueSourceJsonConverter.CanWrite">
            <summary>
            Indicates whether the converter can write (serialize) an object to json.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.VaultExtensionMethodCall">
            <summary>
            Defines a how a VaultExensionMethod can be called.
            Assumes that the parameters are always an array that will be serialized as json when called.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodCall.Method">
            <summary>
            The name of the vault extension method.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodCall.Params">
            <summary>
            The parameters for the vault extension method.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodCall.Map">
            <summary>
            Allows for dynamic parameters to be specified at call time.
            The dynamic parameters are named, and this dictionary maps those names
            to a specific parameter index.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Domain.VaultExtensionMethodSource">
            <summary>
            Defines a vault extension method call to obtain (read) a value from the vault.
            Also allows defining a vault extension method call to update (write) a value in the vault.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodSource.TypeName">
            <summary>
            The name of the source.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodSource.Read">
            <summary>
            A vault extension method call used to obtain (read) a value from the vault.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Domain.VaultExtensionMethodSource.Write">
            <summary>
            A vault extension method call used to update (write) a value in the vault.
            The VaultExtensionMethodCall should map the "text" value to a parameter index as the value to store.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.EnumOption">
            <summary>
            JsonConfigurationEditor Enum option wrapper class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.EnumOption.GetEnumValue(System.Object,System.Type)">
            <summary>
            Extracts a value from an enum.
            </summary>
            <param name="member">Enum member.</param>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.EnumOption.GetEnumValues(System.Type)">
            <summary>
            Extracts all members from an enum.
            </summary>
            <param name="enumType"><see cref="T:System.Enum"/> type.</param>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.EnumOption.Number">
            <summary>
            Holds the numeric value for an enum member.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.EnumOption.Value">
            <summary>
            Holds the string value for an enum member.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.EnumOption.Label">
            <summary>
            Holds a explicitly defined label for a enum member.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.EnumOption.Type">
            <summary>
            Enum type.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IConfigurationValidityMask">
            <summary>
            Interface for the configuration validity mask. The mask indicates if a configuration value has been set or validated.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationValidityMask.MarkMemberDefined(System.Object,System.Reflection.MemberInfo)">
            <summary>
            Marks the configuration member as 'defined', i.e. it is set in the user-specified configuration.
            </summary>
            <param name="containerObject">The object whose member is marked as defined.</param>
            <param name="member">The member indentity.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.IConfigurationValidityMask.IsMemberDefined(System.Object,System.Reflection.MemberInfo)">
            <summary>
            Resolves if a configuration member is defined. I.e. it is set in the user-specified configuration.
            </summary>
            <param name="containerObject">The object whose member is looked.</param>
            <param name="member">The member indentity.</param>
            <returns>Returns true if the member is defined.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonConfEditorAttribute">
            <summary>
            Defines extra information for type and member declarations for
            use in the json configuration editor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfEditorAttribute.HasAttr(System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Allows for simple checking of a key within the options expando objects.
            </summary>
            <param name="expando"><see cref="T:System.Dynamic.ExpandoObject"/> to check.</param>
            <param name="key">Key to check for.</param>
            <returns>True / False</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfEditorAttribute.#ctor">
            <summary>
            Constructor with default values.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.TypeEditor">
            <summary>
            The name of the default/custom type editor that should be used for this value.
            
            If not specified the system will choose the editor based on the type, and may
            generate an editor dynamically.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ExtendsEditor">
            <summary>
            The name of the type editor that should be extended for this value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ChildTypeEditor">
            <summary>
            The name of the default/custom type editor that should be used for this value's children.
            
            If this value is set, and TypeEditor isn't, the "array" will be assumed as the TypeEditor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ChildName">
            <summary>
            The generic name for the children of this type.
            If not specified, the un-namespaced child type editor name is used.
            Controls the default label for children (e.g. "{ChildName} [1]") 
            and the add new button (e.g. "Add new {ChildName}").
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.Label">
            <summary>
            The human readable name to show for this value.
            If not specified, the member or type name will be shown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.NameMember">
            <summary>
            The member whose value can be used as a unique name for an instance of the type.
            Useful when displaying objects in a list (array).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ValueMember">
            <summary>
            If a simple value can be directly cast to this type,
            this is the member of the type that the value will be set to.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.DefaultValue">
            <summary>
            The default value for this type/member.
            Only works for simple values.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.HelpText">
            <summary>
            A short text for the member or type so users understand it's purpose, how/when to use it, etc...
            May be displayed as a tool tip or in other context specific places.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.HelpTextResourceId">
            <summary>
            Same as the help text but a localizable resource id instead of hard coded text. Both can be
            specified but the resource based text is used in the first place.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.DocReference">
            <summary>
            A short text for the member or type so users understand it's purpose, how/when to use it, etc...
            May be displayed as a tool tip or in other context specific places. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.UsesAdapter">
            <summary>
            Used in conjunction with an editor that is tagged as "IsAdapter = True".
            Members where the UsesAdapter = True / The items editor has IsAdapter = True
            are piped through the adapter for updates.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.Hidden">
            <summary>
            Used to prevent a value/key from appearing in the editor. If specified on an object (complex type),
            none of it's children will be visible.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.HideWhen">
            <summary>
            Visibility condition. Via JSPath.
            When true, the value is hidden in the Editor.
            
            Example:
            HideWhen = ".SiblingProperty == 'Test' "
            HideWhen = ".SiblingProperty{.NestedProperty == 'Test'} "
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ShowWhen">
            <summary>
            Visibility condition. Via JSPath.
            When true, the value is shown in the Editor.
            
            Example:
            ShowWhen = ".SiblingProperty == 'Test' "
            ShowWhen = ".SiblingProperty{.NestedProperty == 'Test'} "
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.Options">
            <summary>
            Additional options to pass to the editor. Specified in json.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ClearOnCopy">
            <summary>
            When true, the value of this field is clear when creating a copying of the item in the editor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.RegExMask">
            <summary>
            When provided, the regular expression mask will be enforced as a validation requirement.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.IsRequired">
            <summary>
            Validation option. If this is set to true, and no value is specified, a validation
            message will be shown to the user.
            </summary>
            <remarks>
            This should be preferred almost always over DataMember::IsRequired = true, 
            as that will cause deserialization to fail if the value is not specified.
            </remarks>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ForceLeafBehavior">
            <summary>
            If set to true, forces an item in the configurators navigation tree (not the grid)
            to be rendered as a leaf node, preventing the items children from being shown
            in the tree. This option has no effect on an item
            that would already classify as a leaf.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.ForceChildLeafBehavior">
            <summary>
            If set to true, forces the child items of an array  in the configurators navigation tree (not the grid)
            to be rendered as a leaf node, preventing their children from being shown
            in the tree. This option has no effect on an item
            that would already classify as a leaf.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfEditorAttribute.UseNonPublicMembers">
            <summary>
            
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute">
            <summary>
            Controls how a float-compatible will be displayed and edited in the JSON Configuration GUI.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.Min">
            <summary>
            Indicates the minimum value to allow in the editor.
            Defaults to Double.NegativeInfinity which passes undefined (no min) to the schema. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.Max">
            <summary>
            Indicates the maximum value to allow in the editor.
            Defaults to Double.PositiveInfinity which passes undefined (no max) to the schema. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.MinPrecision">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.MaxPrecision">
            <summary>
            
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfFloatEditorAttribute.Step">
            <summary>
            Indicates the amount by which a value is increased or decreased in the editor.
            (When clicking up and down arrows/icons.)
            Defaults to zero, meaning no step specified.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute">
            <summary>
            Controls how an integer-compatible item will be displayed and edited in the JSON Configuration GUI.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.Min">
            <summary>
            Indicates the minimum value to allow in the editor.
            Defaults to int.MinValue which passes undefined (no min) to the schema. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.Max">
            <summary>
            Indicates the maximum value to allow in the editor.
            Defaults to int.MaxValue which passes undefined (no max) to the schema. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfIntegerEditorAttribute.Step">
            <summary>
            Indicates the amount by which a value is increased or decreased in the editor.
            (When clicking up and down arrows/icons.)
            Defaults to zero, meaning no step specified.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute">
            <summary>
            Controls how search conditions are displayed and edited in the JSON Configuration GUI.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.behaviorFilter">
            <summary>
            Json enum value indicating the conditions are used for filtering.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.behaviorSearch">
            <summary>
            Json enum value indicating the conditions are used for searching.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.IsFilter">
            <summary>
            If <c>true</c>, indicates that the conditions will be used as filters
            instead of search conditions, meaning the "is empty" operator
            can/should be treated as "is empty or missing". 
            Defaults to true.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonConfSearchConditionsJAEditorAttribute.Validate">
            Indicates if the search conditions should be validated automatically.
            Default = true.
        </member>
        <member name="T:MFiles.VAF.Configuration.DynamicList.DynamicListMemberAttribute">
            <summary>
            Describes the attributes of a Dynamic List Member ( IE: Subscribe-able List collection member ).
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListMemberAttribute.#ctor">
            <summary>
            Default parameter-less constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.DynamicList.DynamicListMemberAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator">
            <summary>
            Creates a json editor schema structure for C# code.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.Generate(System.Type)">
            <summary>
            Static convenience method used to generate a schema from a type.
            </summary>
            <param name="fromType">Type to be generated.</param>
            <returns><see cref="T:MFiles.VAF.Configuration.JsonEditor.Schema"/></returns>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.defaultTypeEditors">
            <summary>
            Default mappings of C# types to existing JSON type editors.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.types">
            <summary>
            Private queue of types that still need editors generated for them.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.handledTypes">
            <summary>
            List of types that have already been converted to editors.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.schema">
            <summary>
            The schema object structure.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.schemaLock">
            <summary>
            Lock to ensure the class only generates one schema at a time.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.EditorsByType">
            <summary>
            Explicit Mapping of C# types to existing JSON type editors.
            
            Types in this list will reference the associated editor name, 
            and no type editor will be generated for them.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GenerateSchema(System.Type)">
            <summary>
            Generates a JSON editor schema for the object's Type.
            Recursively creates member definitions for it's members and it's members' members,
            also creating type editors for any member types that can't use an existing one. 
            </summary>
            <param name="type">Type to be generated.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GetEnumLabel(System.Type,System.String,MFiles.VAF.Configuration.JsonConfEditorAttribute)">
            <summary>
            Resolves a custom <see cref="T:MFiles.VAF.Configuration.JsonConfEditorAttribute"/> 'Label' from an Enum.
            </summary>
            <param name="type">Enum Type</param>
            <param name="name">Enum numeric value.</param>
            <param name="attr"><see cref="T:MFiles.VAF.Configuration.JsonConfEditorAttribute"/></param>
            <returns>Enum Name or Label.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.MergeDynamics(System.Collections.Generic.IDictionary{System.String,System.Object},MFiles.VAF.Configuration.IJsonConfEditorAttr,System.Boolean)">
            <summary>
            Adds the values returned from <see cref="T:MFiles.VAF.Configuration.IJsonConfEditorAttr"/>.GetOptions() to the provided targetDynamic.
            </summary>
            <param name="targetDynamic">Dynamic to populate with additional values.</param>
            <param name="newValueSource"><see cref="T:MFiles.VAF.Configuration.IJsonConfEditorAttr"/> from which to resolve the new values, via GetOptions()</param>
            <param name="overwriteExisting">When true, existing values will be overwritten if new values of the same key are encountered.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GenerateTypeEditor(System.Type)">
            <summary>
            Creates a JSON editor definition for a specific type.
            </summary>
            <param name="type">The type to create the editor for</param>
            <returns>Type name and editor definition.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GenerateMemberDefinition(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Generates a member definition for a type's member.
            </summary>
            <param name="name">The name of the member.</param>
            <param name="type">The type of the member.</param>
            <param name="attributes">The attributes defined/relevant for the member.</param>
            <returns>A member definition.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GetAttr``1(System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Utility method for getting an attribute of a certain type from a list of attributes.
            </summary>
            <typeparam name="T">The type of attribute to fetch.</typeparam>
            <param name="attrs">The list of attributes to search in.</param>
            <returns>The first attribute found that matches the type or null.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.GetChildTemplate(System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Creates a child template for a member with a generic list-like type.
            If there are nested generic list-like types, the method will recurse until
            a child template with a type that isn't a generic list-list type is created.
            </summary>
            <param name="type">The child's type.</param>
            <param name="attributes">
            The attributes for generic list-like type's 
            member for which this child type template is being generated.
            </param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.ResolveEditorTypeName(System.Type,System.Collections.Generic.IEnumerable{System.Attribute},System.Type@)">
            <summary>
            Resolves the name of the JSON editor to be used for a particular type / and member (based on attributes).
            </summary>
            <param name="type">The type of the value to be edited.</param>
            <param name="attributes">Any attributes accompanying the type/member that may affect the type editor chosen.</param>
            <param name="childType">
            The name of the child type's editor that should be used if the passed type is 
            list-like (uses the "array" editor)
            </param>
            <returns>The name of the editor type.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.TryGetGenericListType(System.Type,System.Type@)">
            <summary>
            Determines if the passed type is a generic list-like type, and if 
            so set's the childType parameter to the type of objects that the list
            contains.
            
            http://stackoverflow.com/questions/906499/getting-type-t-from-ienumerablet
            </summary>
            <param name="type">The type to check if it is list-like.</param>
            <param name="childType">The type of objects this list type contains (if the type is a list-like).</param>
            <returns>True if the passed type was list-like (and the childType was set), false otherwise.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.ResourceManager">
            <summary>
            The resource manager object for resolving the resource ids.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.MemberAddedCallback">
            <summary>
            Event triggered when a member is added to a generated type editor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonEditor.SchemaGenerator.SchemaMemberAddedCallback">
            <summary>
            Callback delegate triggered when a member is added to an editor.
            This allows massaging a member definition, 
            primarily to set options, at runtime.
            </summary>
            <param name="parentType">The name of the editor the member is being added to.</param>
            <param name="name">The name of the member.</param>
            <param name="member">The generated member definition which can be modified</param>
        </member>
        <member name="T:MFiles.VAF.Configuration.ILicensedApplication">
            <summary>
            Licensing interface for required from all license-enabled applications.
            Methods for setting the license and getting the statuses.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ILicensedApplication.SetApplicationLicense(System.String)">
            <summary>
            Setting in a new license content.
            Gets called from applying new license from MF-Admin.
            </summary>
            <param name="license">The license content.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ILicensedApplication.GetApplicationLicenseStatus(System.String)">
            <summary>
            Called by platform, at any time, to request the license status, 
            either currently set license or the one given as argument.
            Returning the value MFApplicationLicenseStatusFormatError for a new license will prevent 
            the user from saving that license into the database.
            Make this method as fast as possible.
            </summary>
            <param name="license">If not null, return status of this license content.</param>
            <returns>Enumeration status.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ILicensedApplication.GetApplicationLicenseDetails(System.String)">
            <summary>
            Called by platform, at any time, to request the license details text, 
            either currenly set license or the one given as argument.
            Make this method as fast as possible.
            </summary>
            <param name="license">If not null, return status of this license content.</param>
            <returns>Details text.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.ILicenseDecoder">
            <summary>
            Interface for the license decoder object utilized by the LicenseManagerBase to convert raw license into readable.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ILicenseDecoder.Decode(System.String)">
            <summary>
            Method used to decode the raw license into json output.
            Throw exception if the format is not recognized or otherwise invalid.
            </summary>
            <param name="input">Raw input</param>
            <returns>Decoded output</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.IApplicationLicenseContent">
            <summary>
            Interface for the application license content class utilized by the LicenseManagerBase.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IApplicationLicenseContent.ToString">
            <summary>
            The text details of the license state.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IApplicationLicenseContent.IsFormatCorrect(System.Guid,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Method to check contents sanity. 
            Conditions are checked with TermCheck.
            </summary>
            <param name="appGuid">Guid of the running application.</param>
            <param name="errors">List of errors.</param>
            <param name="infos">List of infos.</param>
            <returns>Correctness</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IApplicationLicenseContent.IsConditionsOK(MFilesAPI.Vault,MFilesAPI.LicenseStatus,System.DateTime,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Method to check if license's conditions are ok.
            </summary>
            <param name="vault">Vault we are in, CanBeNull.</param>
            <param name="serverLicenseStatus">License Status of current server license, CanBeNull.</param>
            <param name="applicationDate">Date of the application binary, CanBeNull.</param>
            <param name="errors">List of errors.</param>
            <param name="infos">List of infos.</param>
            <returns>Correctness</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.LicenseStatus">
            <summary>
            The contents license status.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.IsEvaluated">
            <summary>
            Cached value for evaluated conditions.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.IsEmpty">
            <summary>
            Global value for emptiness.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.Errors">
            <summary>
            Internal containers for errors from deserialization etc.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.Infos">
            <summary>
            Internal containers for infos from deserialization etc.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IApplicationLicenseContent.FormatError">
            <summary>
            Global value for really bad source data.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ILicensingSupport`1">
            <summary>
            Licensing interface for base implementation.
            </summary>
            <typeparam name="LicenseType">Type of the license content object.</typeparam>
        </member>
        <member name="P:MFiles.VAF.Configuration.ILicensingSupport`1.RawLicense">
            <summary>
            The raw license string.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ILicensingSupport`1.License">
            <summary>
            The license object of the general type.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ILicensingSupport`1.Decoder">
            <summary>
            The license decoder used to "open" the raw license, if set.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.LicenseContentBase">
            <summary>
            License Content object with common set of members.
            Includes validation checks for them.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseContentBase.NEVER">
            <summary>
            Keyword for expiracy.
            No translation.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseContentBase.maintenanceExpireDateTime">
            <summary>
            Internal value of the MaintenanceExpireDate.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseContentBase.licenseExpireDateTime">
            <summary>
            Internal value of the LicenseExpireDate.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseContentBase.inGrace">
            <summary>
            We are in grace.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.IsFormatCorrect(System.Guid,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Method to check contents sanity. 
            </summary>
            <param name="appGuid">Application Guid to require.</param>
            <param name="errors">List of errors.</param>
            <param name="infos">List of infos.</param>
            <returns>Correctness</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.IsConditionsOK(MFilesAPI.Vault,MFilesAPI.LicenseStatus,System.DateTime,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Method to check if license's conditions are ok.
            </summary>
            <param name="vault">Vault we are in, CanBeNull.</param>
            <param name="serverLicenseStatus">License Status of current server license, CanBeNull.</param>
            <param name="applicationDate">Date of the application binary.</param>
            <param name="errors">List of errors.</param>
            <param name="infos">List of infos.</param>
            <returns>Correctness</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.ServerLicenseStatusChecks(MFilesAPI.Vault,System.Object,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Checks from LicenseStatus of the server.
            Using dynamic member to have backward compatibility with MF 11.2.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.VersionMatch(MFilesAPI.MFilesVersion,System.String)">
            <summary>
            Return if the filter matches the version.
            Filter contain any number of parts "12", "11.2", "11.1.4320", "10.3.3210.123"
            </summary>
            <param name="ver">Version</param>
            <param name="filter">Filter</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.VersionIsAtleast(MFilesAPI.MFilesVersion,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return true if this version is at least the given separate version number
            in branch-specific manner (requires major and minor to match exactly).
            </summary>
            <param name="version">Version to check and compare.</param>
            <param name="major">Major version, exact match.</param>
            <param name="minor">Minor version, exact match.</param>
            <param name="build">Build version, >= comparison.</param>
            <param name="patch">Patch version, >= comparison.</param>
            <returns>The version is at least the given numbers version.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseContentBase.ToString">
            <summary>
            The text details of the license state.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.LicenseVersion">
            <summary>
            Version of this license format.
            Usefull after version difference becomes relevant.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Description">
            <summary>
            Description of the application/license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.SerialNumber">
            <summary>
            Serial number of the license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.LicensedTo">
            <summary>
            Licensee name.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.IsTrial">
            <summary>
            Is this a trial license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Application">
            <summary>
            Identification of the application (GUID).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.LicenseExpireDate">
            <summary>
            Last date of license validity.
            "dd.mm.yyyy" (date,month,year) format.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.MaintenanceExpireDate">
            <summary>
            Last date of Maintenance subscription validity.
            "dd.mm.yyyy" (date,month,year) format.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.GraceDays">
            <summary>
            Number of days to consider grace period after the expiracy.
            Unset/zero value to not use any grace.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Vaults">
            <summary>
            Identification of the vaults this license is only allowed in.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Modules">
            <summary>
            List of modules covered in this license.
            Usefull for ModularVaultApplication.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Groups">
            <summary>
            List of user group max-length requirements.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.MFilesSerialNumber">
            <summary>
            Only work in server with this license number.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.NamedUsers">
            <summary>
            Number of Named user licenses allowed in Server license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.ConcurrentUsers">
            <summary>
            Number of Concurrent user licenses allowed in Server license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.ReadOnlyUsers">
            <summary>
            Number of Readonly user licenses allowed in Server license.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.ServerVersions">
            <summary>
            Exclusive list of allowed server versions.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.IsValid">
            <summary>
            Overall validity value.
            This is not read from license directly.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.IsEvaluated">
            <summary>
            Is our instance evaluated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Errors">
            <summary>
            List of our errors.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.Infos">
            <summary>
            List of our infos.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.IsEmpty">
            <summary>
            Are we empty.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.FormatError">
            <summary>
            Had we format error from deserializing or smth.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseContentBase.LicenseStatus">
            <summary>
            The contents license status.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.GroupLenLimit">
            <summary>
            Group alias/lenght structure.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.GroupLenLimit.Group">
            <summary>
            Identification of the group, Alias.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.GroupLenLimit.Len">
            <summary>
            Max allowed length of users in this group.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.LicenseDecoder">
            <summary>
            Default license decoder that uses the default formatting provided by LicenseHelper.
            Support the few available encoding methods.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseDecoder.#ctor">
            <summary>
            Constructer.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseDecoder.#ctor(MFiles.VAF.Configuration.LicenseDecoder.EncMode)">
            <summary>
            Constructer.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseDecoder.mode">
            <summary>
            Internal mode selector.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseDecoder.Decode(System.String)">
            <summary>
            Decode the input into output.
            Throw exception if the format is not recognized or otherwise invalid.
            </summary>
            <param name="input">Input</param>
            <returns>output</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseDecoder.SharedSecretDecode(System.String)">
            <summary>
            Decode the input into output using Shared Secret method.
            Throw exception if the format is not recognized or otherwise invalid.
            </summary>
            <param name="input">Input</param>
            <returns>output</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.LicenseDecoder.TwoKeyDecode(System.String)">
            <summary>
            Decode the input into output using Two Key method.
            Throw exception if the format is not recognized or otherwise invalid.
            </summary>
            <param name="input">Input</param>
            <returns>output</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseDecoder.MainKey">
            <summary>
            XML format representation of public key used to verify license signature.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseDecoder.AltKey">
            <summary>
            XML format representation of secondary key used.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.LicenseDecoder.SharedSecret">
            <summary>
            Shared password used to AES decode the content.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.LicenseDecoder.EncMode">
            <summary>
            Our mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseDecoder.EncMode.SharedSecret">
            <summary>
            Shared secret mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.LicenseDecoder.EncMode.TwoKey">
            <summary>
            Two key encryption.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute">
            <summary>
            Substructure (IE: Workflow => State / State Transition || ObjType => Class ) element reference.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFStructureReferenceAttribute">
            <summary>
            Structure element reference specific attribute class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStructureReferenceAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStructureReferenceAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStructureReferenceAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStructureReferenceAttribute.ChildRestrictReferenceTypes">
            <summary>
            Collection of reference types that are not allowed for child items.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStructureReferenceAttribute.RestrictReferenceTypes">
            <summary>
            Collection of reference types that are not allowed.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFStructureReferenceAttribute.MFStructureReferenceType">
            <summary>
            Reference types for a given Structure Element Reference.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFStructureReferenceAttribute.MFStructureReferenceType.ID">
            <summary>
            ID.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFStructureReferenceAttribute.MFStructureReferenceType.ObjID">
            <summary>
            ObjID.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFStructureReferenceAttribute.MFStructureReferenceType.Alias">
            <summary>
            Alias.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFStructureReferenceAttribute.MFStructureReferenceType.Guid">
            <summary>
            Guid.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute.FilterReferencePath">
            <summary>
            When Value List Item filtering based on a owner Value List that is defined within the
            object hierarchy, this attribute is used to define to JSPath to the 'item' that contains the 
            value list definition to filter against.
            <usage>
            // FilterReferencePath = ".parent._children{.key = 'MySiblingItem' } "
            var refItem = JSPath.apply( item.options.filterReferencePath, item )[ 0 ];
            var structureDef = refItem.structureDef;
            </usage>
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFSubstructureReferenceAttribute.ChildFilterReferencePath">
            <summary>
            The value given here is passed on to the child options, use this if the decorated 
            property is a collection.
            
            When Value List Item filtering based on a owner Value List that is defined within the
            object hierarchy, this attribute is used to define to JSPath to the 'item' that contains the 
            value list definition to filter against.
            <usage>
            // FilterReferencePath = ".parent._children{.key = 'MySiblingItem' } "
            var refItem = JSPath.apply( item.options.filterReferencePath, item )[ 0 ];
            var structureDef = refItem.structureDef;
            </usage>
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFPropertyDefReferenceAttribute">
            <summary>
            PropertyDef structure element reference specific attribute class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFPropertyDefReferenceAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFPropertyDefReferenceAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFPropertyDefReferenceAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFPropertyDefReferenceAttribute.Datatypes">
            <summary>
            Valid <see cref="T:MFilesAPI.MFDataType"/>'s available for the target <see cref="T:MFilesAPI.PropertyDef"/>.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm">
            <summary>
            Root level Provider Term.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.Term">
            <summary>
            Term value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.Mode">
            <summary>
            Mapping Mode.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.Type">
            <summary>
            Any Property Mode : Mapping.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.Property">
            <summary>
            Specific Property Mode : Mapping.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.ProviderTerm.InstanceTerms">
            <summary>
            Collection of Instance Terms, for this Term.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IntelligenceServices.SubTermMap">
            <summary>
            Sub-Term Mapping.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.SubTermMap.TermValue">
            <summary>
            Term value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.SubTermMap.MFValue">
            <summary>
            Item value. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.SubTermMap.SubTerms">
            <summary>
            Collection of nested Sub-Terms.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IntelligenceServices.TermMap">
            <summary>
            Term mapping.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.TermMap.TermValue">
            <summary>
            Term value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.TermMap.MFValue">
            <summary>
            Dynamic Item value. 
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.TermMap.InstanceTerms">
            <summary>
            Collection of nested Instance-Terms.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.IntelligenceServices.TermMap.SubTerms">
            <summary>
            Collection of nested Sub-Terms.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IntelligenceServices.TermMode">
            <summary>
            Term Filter Mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.IntelligenceServices.TermMode.NotMapped">
            <summary>
            No value has yet been selected.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.IntelligenceServices.TermMode.SpecificPropertyMode">
            <summary>
            The filter is to be based off of a specific property.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.IntelligenceServices.TermMode.AnyPropertyMode">
            <summary>
            The filter is to be based off of a Value List Type ( so it works for any property targeting the value list ).
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonEditor.Schema">
            <summary>
            Represents a JSON editor schema defintion.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.Schema.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonEditor.Schema.ToJson">
            <summary>
            Serializes the internal schema structure into a JSON string.
            </summary>
            <returns>The serialized JSON schema.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonEditor.Schema.Type">
            <summary>
            The name of the editor to assign to types loaded with this schema.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonEditor.Schema.Options">
            <summary>
            Options to be assigned to the top level item loaded with this schema.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonEditor.Schema.Editors">
            <summary>
            The editors defined by this schema.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MultilineTextEditorAttribute">
            <summary>
            JsonConEditor - Multi-line Text Editor Options Attribute.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.TextEditorAttribute">
            <summary>
            JsonConEditor - Text Editor Options Attribute.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TextEditorAttribute.#ctor">
            <summary>
            Default Constructor, explicitly sets the TypeEditor property.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TextEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TextEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.TextEditorAttribute.MaxLength">
            <summary>
            Maximum length restriction for strings used with this property.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MultilineTextEditorAttribute.#ctor">
            <summary>
            Default Constructor, explicitly sets the TypeEditor property.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MultilineTextEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MultilineTextEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MultilineTextEditorAttribute.MaxRowHeight">
            <summary>
            Maximum row height visible before the scroll bar is activated.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.SecurityAttribute">
            <summary>
            Define the security information about the configuration property.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.ChangeBy">
            <summary>
            Defines the minimum userlevel required for changing the value.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.IsPassword">
            <summary>
            Is the property a password field, which is returned as empty.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.SecurityAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.SecurityAttribute.UserLevel">
            <summary>
            Userlevel enumeration.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.UserLevel.User">
            <summary>
            Any user.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.UserLevel.VaultAdmin">
            <summary>
            Vault administrator.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.UserLevel.SystemAdmin">
            <summary>
            System administrator.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.SecurityAttribute.UserLevel.Nobody">
            <summary>
            Non-existing user level, Read-only value.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.IMetadataStructureValidator">
            <summary>
            The validator interface for checking if the metadata structure reference of given object is valid.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.IMetadataStructureValidator.ValidateItem(MFilesAPI.Vault,System.String,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configurationId">The id of the configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IMetadataStructureValidator.ValidateItem(MFilesAPI.Vault,System.String,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Resources.ResourceManager,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configurationId">The id of the configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="resourceManager">The resource manager object that contains needed resources for validating the given item.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.IMetadataStructureValidator.ValidateItem(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationInterruptedException">
            <summary>
            Exception that marks that the validation of an class hierarchy has been interrupted. This shouldn't be handled as an error.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MetadataStructureValidator">
            <summary>
            Validation of Vault.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ValidateItem(MFilesAPI.Vault,System.String,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configurationId">The id of the configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ValidateItem(MFilesAPI.Vault,System.String,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Resources.ResourceManager,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configurationId">The id of the configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="resourceManager">The resource manager object that contains needed resources for validating the given item.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ValidateItem(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Reflection.Assembly[],System.Int32)">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items. Can be null in which case the set defaults to the assembly that contains the item.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ValidateItemInternal(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,System.Object,MFiles.VAF.Configuration.ValidationResultBase,System.Object,System.Reflection.MemberInfo,System.Int32,System.Reflection.Assembly[],System.Collections.Generic.HashSet{System.Object})">
            <summary>
            Validate item with its children. Can validate static and instance objects.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The validated item "value". To validate static structure use: <c>typeof(somestatic)</c></param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <param name="parent">Parent object of item. Can be null.</param>
            <param name="member">The member in which this item is, can be null, and usually is.</param>
            <param name="level">Hierarchy level limiter. Number of levels how deep to check. Set only for dev reasons.</param>
            <param name="containingAssemblies">Set of assemblies that are allowed to contain the validated items.</param>
            <param name="handledItems">Collection of items that have already been validated.</param>
            <returns>True when everything is ok.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.CheckAndProcessDeprecatedMember(MFiles.VAF.Configuration.IConfiguration,System.Object,System.Reflection.MemberInfo,MFiles.VAF.Configuration.ValidationResultBase,System.Boolean@)">
            <summary>
            Checks and sets an error if a deprecated member has found to have a value. Processes the value assignment to the replacement member.
            </summary>
            <param name="configuration"></param>
            <param name="item"></param>
            <param name="childMember"></param>
            <param name="validationResult"></param>
            <param name="failed"></param>
        </member>
        <member name="F:MFiles.VAF.Configuration.MetadataStructureValidator.unacceptableTypes">
            <summary>
            List of types which should not be validated and traversed into.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.GetValue(System.Object,System.Object)">
            <summary>
            Get value of obj, that is member of mother.
            </summary>
            <param name="obj">Any object, can be field or property or type ..</param>
            <param name="mother">Instance containing the obj, can be instance or Type or ..</param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.Items(System.Object)">
            <summary>
            Return items in o as list.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.GetChildren(System.Object)">
            <summary>
            Get first level of children of the target object.
            Returns as members of the o, as FieldInfo or PropertyInfo.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.GetIdentifier(MFilesAPI.Vault,System.Object,MFiles.VAF.Configuration.VaultElementReferenceAttribute)">
            <summary>
            Return resolved reference for the object.
            </summary>
            <param name="vault">The vault.</param>
            <param name="reference">Reference to object of validation.</param>
            <param name="attribute">The attribute from which the reference is resolved.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.GetReferenceAsIdentifier(System.Object,MFiles.VAF.Configuration.VaultElementReferenceAttribute)">
            <summary>
            Return value of given reference and handle a few special cases.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFWorkflowAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of Workflow reference and its states in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFStateAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param> 
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFViewAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFValueListAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFValueListItemAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation result that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFUserGroupAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFSkipAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFPropertyDefAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFObjTypeAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFObjectAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFNamedACLAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFClassGroupAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFClassAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFAssociatedPropertyAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFStateTransitionAttribute,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.IsValid(MFilesAPI.Vault,MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.IJsonConfEditorAttr,System.Object,System.Object,MFiles.VAF.Configuration.ValidationResultBase)">
            <summary>
            Check the validity of reference in the vault.
            </summary>
            <param name="vault">Vault in which to check.</param>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="attribute">The attribute that contains the validation rules.</param>
            <param name="reference">Reference to object to validate.</param>
            <param name="parent">Parent of the object reference. Can be null.</param>
            <param name="validationResult">The validation state that receives the validation results.</param>
            <returns>Returns true if the validation succeeded.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.MetadataStructureValidator.ReferenceEqualityComparer">
            <summary>
            Comparer object for comparing object references.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
            <summary>
            Compares the reference equality of two objects.
            </summary>
            <param name="lhs">The first parameter.</param>
            <param name="rhs">The second parameter</param>
            <returns>True if the references are equal.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.ReferenceEqualityComparer.GetHashCode(System.Object)">
            <summary>
            Returns the hash code for the object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.MetadataStructureValidator.TemporaryConfiguration">
            <summary>
            A dummy class for enabling the ValidateItem call with just the configuration id string.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.TemporaryConfiguration.#ctor(System.Resources.ResourceManager)">
            <summary>
            Constructor.
            </summary>
            <param name="resourceManager">The resource manager object that is associated with this configuration. Can be null.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MetadataStructureValidator.TemporaryConfiguration.Valid">
            <summary>
            Method for resolving if the configuration is valid.
            </summary>
            <returns>True if the configuration is valid.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MetadataStructureValidator.TemporaryConfiguration.ConfigurationId">
            <summary>
            The ID of the configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MetadataStructureValidator.TemporaryConfiguration.ResourceManager">
            <summary>
            Returns the resource manager object that is associated with this configuration. Can be null.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute">
            <summary>
            Associated Property Definition.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFPropertyDefAttribute">
            <summary>
            Property Definition.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.VaultElementReferenceAttribute">
            <summary>
            Base interface of validation attributes.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.VaultElementReferenceAttribute.#ctor">
            <summary>
            Constructor with default values.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.VaultElementReferenceAttribute.Required">
            <summary>
            Is the reference absolute requirement, default is true.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.VaultElementReferenceAttribute.Validate">
            <summary>
            Should the reference be validated. Default is true.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.VaultElementReferenceAttribute.AllowEmpty">
            <summary>
            Is it allowed for this item to be unset, empty or null. Default is false.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.VaultElementReferenceAttribute.AttributeType">
            <summary>
            Type of the target, used in id resolving.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.VaultElementReferenceAttribute.RefMember">
            <summary>
            Name of the class member containing the reference alias/guid/id of the type.
            Has a default value. If object with the attribute is not class, this value is ignored.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFPropertyDefAttribute.Datatypes">
            <summary>
            Optional array of DataTypes the property needs to be one of.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFPropertyDefAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFPropertyDefAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFPropertyDefAttribute.ValueList">
            <summary>
            Optional reference (ID, GUID, alias) to the ValueList (or object type) which SSLU or MSLU must refer.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFPropertyDefAttribute.ObjectType">
            <summary>
            Optional reference (ID, GUID, alias) to the object type this property must be able to be assigned to.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFPropertyDefAttribute.ObjectTypeMember">
            <summary>
            Alternative for ObjectType=, used only with class type objects.
            Name of the class member containing the reference value of ObjectType.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.ValueRequired">
            <summary>
            Is property required property of the class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.Class">
            <summary>
            Reference (ID, GUID, alias) to the class type this property must be associated to.
            Not needed if nested under MFClass object.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState">
            <summary>
            Tristate value of the associations ValueRequired
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState.Yes">
            <summary>
            Must be Required.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState.No">
            <summary>
            Must not be Required 
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState.Any">
            <summary>
            Can be required or not.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFClassAttribute">
            <summary>
            Class object.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFClassAttribute.ObjectType">
            <summary>
            Object type reference this class should be able to be assigned to.
            Can be set manually if the objecttype is not available as member of this class object.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFClassAttribute.AssociatedProperties">
            <summary>
            PropertyDef references this class should be associated with, with Required flag false.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFClassAttribute.RequiredAssociatedProperties">
            <summary>
            PropertyDef references this class should be associated with, with Required flag true.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFClassAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFClassGroupAttribute">
            <summary>
            ClassGroup object.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFClassGroupAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFDeprecatedAttribute">
            <summary>
            Attribute that specifies if a configuration key is deprecated.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFDeprecatedAttribute.#ctor">
            <summary>
            Construtor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFDeprecatedAttribute.#ctor(System.Boolean)">
            <summary>
            Construtor.
            </summary>
            <param name="isError">True if the use of the configuration key should be an error and prevent the use of the configuration.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFDeprecatedAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Construtor.
            </summary>
            <param name="message">The error message to use if the configuration contains a value for this key.</param>
            <param name="isError">True if the use of the configuration key should be an error and prevent the use of the module.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFDeprecatedAttribute.IsError">
            <summary>
            True if the use of the configuration key should be an error and prevent the use of the configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFDeprecatedAttribute.Message">
            <summary>
            The error message about deprecated key.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFDeprecatedAttribute.MessageResourceId">
            <summary>
            The resource id of the error message about the deprecated key. This is used instead of the Message if specified.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFDeprecatedAttribute.Replacement">
            <summary>
            The name of the replacement configuration member.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifierFormatConstants">
            <summary>
            Format strings used by MFIdentifier.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifier">
            <summary>
            Identification object type, that can be set to string and int.
            Implicit conversion to integer, explicit to alias string.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.alias">
            <summary>
            Internal field of Alias string.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.originalID">
            <summary>
            Internal version of original ID value, not the resolved one.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.Equals(MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Equality of two MFIdentifiers.
            For resolved identifiers, type and ID must match.
            If either one is unresolved, aliases or original ids must match.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.Equals(System.Object)">
            <summary>
            Equality with any other object.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.GetHashCode">
            <summary>
            Get Hash Code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.ShouldSerializeAlias">
            <summary>
            Method deciding should we include Alias into serialization output.
            Yes when we have an alias.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.ShouldSerializeID">
            <summary>
            Method deciding should we include ID into serialization output.
            Yes only when we dont have an alias.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.SetAsID">
            <summary>
            Indicates whether the MFIdentifier was intially set as an id.
            Allows serialization to match deserialized values, or to skip resolution.
            </summary>
            <returns></returns>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.resolvedOnce">
            <summary>
            Additional internal flag for Resolved state.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier._Resolve(MFilesAPI.Vault)">
            <summary>
            Internal resolving method.
            </summary>
            <param name="vault">The vault where to resolve.</param>
            <returns>true if handled, false is nothing done.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.Resolve(MFilesAPI.Vault,System.Type,System.Int32,System.Boolean)">
            <summary>
            Update this MFIdentifier to contain resolved ID of the alias, if it is not already resolved.
            Returns itself to allow command chaining.
            </summary>
            <param name="vault">The vault where to resolve.</param>
            <param name="targetType">Type of the object</param>
            <param name="valueList">The value list if resolving ValueListItems or ObjIDs</param>
            <param name="forceRefresh">Forces re-resolution if the identifier has already been resolved.</param>
            <returns>this MFIdentifier</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.Resolve(MFilesAPI.Vault,System.Type,System.Boolean)">
            <summary>
            Update this MFIdentifier to contain resolved ID of the alias, if it is not already resolved.
            Returns itself to allow command chaining.
            </summary>
            <param name="vault">The vault where to resolve.</param>
            <param name="targetType">Type of the object</param>
            <param name="forceRefresh">Forces re-resolution if the identifier has already been resolved.</param>
            <returns>this MFIdentifier</returns>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.type">
            <summary>
            Last used target type.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAs">
            <summary>
            Internal information keeping track which type of value was set into this identifier.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.#ctor(System.Object)">
            <summary>
            Constructor to unknown anytype object.
            </summary>
            <param name="source">Source data object of many type.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.#ctor(System.Int32)">
            <summary>
            Constructor with known integer ID value.
            </summary>
            <param name="id">Known ID value.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.#ctor(System.String)">
            <summary>
            Constructor with known string value.
            </summary>
            <param name="str">Known alias string.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.op_Implicit(MFiles.VAF.Configuration.MFIdentifier)~System.Int32">
            <summary>
            Implicit conversion to int identifier, allowing direct use inplace of int.
            </summary>
            <param name="identifier"></param>
            <returns>ID</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.op_Explicit(MFiles.VAF.Configuration.MFIdentifier)~System.String">
            <summary>
            Original value string value can be got by explicit request.
            Allowing conversion and assignment into string.
            <c>string s = (string)SomeIdent;</c>
            If only ID number available, returns it as a string.
            </summary>
            <param name="identifier"></param>
            <returns>alias</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.Set(System.Object)">
            <summary>
            Helper function able to set the identifier value to almost any object type.
            Accepts MFIdentifier, string, int, enum, and other that cast to string.
            Returns itself to allow command chaining.
            </summary>
            <remarks>Note that using with integer like object will clear the alias, unlike setting the .ID directly.</remarks>
            <param name="anyObject">Source of any type.</param>
            <returns>this</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.SetStr(System.String)">
            <summary>
            Set the value to string value, handles also string containing integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.SetInt(System.Int32)">
            <summary>
            Set the value to integer ID.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.ToString">
            <summary>
            Returns this instance of Alias value, if not avail, returns string of ID.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.op_Implicit(System.String)~MFiles.VAF.Configuration.MFIdentifier">
            <summary>
            Implicit conversion of string to MFIdentifier.
            Allowing: <c>MFIdentifier x = "string";</c>
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.op_Implicit(System.Int32)~MFiles.VAF.Configuration.MFIdentifier">
            <summary>
            Implicit conversion of int to Ident, allowing: <c>MFIdentifier x = 109;</c>
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.op_Implicit(System.Int64)~MFiles.VAF.Configuration.MFIdentifier">
            <summary>
            Implicit conversion of long int to Ident, allowing: <c>MFIdentifier x = 109;</c>
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.IsNullOrEmpty(MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Indicates whether specified MFIdentifier is null or empty.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.IsNullOrUnresolved(MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Indicates whether specified MFIdentifier is null or empty or not Resolved.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.IsValidGuid(System.String)">
            <summary>
            Indicates whether the passed string is a valid M-Files formatted GUID.
            
            {00000000-0000-0000-0000-000000000000}
            
            </summary>
            <param name="guid">A guid string.</param>
            <returns>True if the string has the correct format, false otherwise.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.IsObjIDString(System.String)">
            <summary>
            Indicates if the passed string matches a valid ObjID format.
            </summary>
            <param name="objIDString">A string representation of an ObjID</param>
            <returns>True if the string has the correct format, false otherwise.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.IsObjVerString(System.String)">
            <summary>
            Indicates if the passed string matches a valid ObjVer format.
            </summary>
            <param name="objVerString">A string representation of an ObjVer.</param>
            <returns>True if the string has the correct format, false otherwise.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.ParseObjIDString(System.String)">
            <summary>
            Parses a string into an ObjID object.
            </summary>
            <param name="objIDString">A string representation of an ObjID.</param>
            <returns>The corresponding ObjID object</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifier.ResolveID(MFilesAPI.Vault,System.Type,System.Object)">
            <summary>
            Resolves the id of a vault element by reference.
            </summary>
            <param name="vault">The vault in which the element is defined.</param>
            <param name="type">M-Files API type of the element to resolve.</param>
            <param name="reference">
             Identifier can be:
            	- int (ID of the element)
            	- string (GUID, ID or Alias of the element)
            	- GUID (GUID of the element)
            	- enum (ID of the element)
            </param>
            <returns>The id of the element, the int value of the reference, or -1 if reference not resolved.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.Alias">
            <summary>
            Alias string.
            Setting this will clear the resolved ID value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.ID">
            <summary>
            ID integer.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.GUID">
            <summary>
            Alias for the Guid member.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.Guid">
            <summary>
            GUID if original string value was valid GUID, else empty string.
            AsOfNow the Alias will also return valid GUID, this might change in the future.
            </summary>
            <remarks>Internally GUID is not any different from Alias.</remarks>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.ValueList">
            <summary>
            The value list related to the resolved id (if relevant)
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.ObjID">
            <summary>
            The ObjID of the item.
            Only relevant for ValueListItems and ObjIDs.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsEmpty">
            <summary>
            Indicates if the identifier is not set, or set to empty.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsResolved">
            <summary>
            Indicates if the set identifier is already resolved.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsGuid">
            <summary>
            Indicates if the set identifier is valid GUID format.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsObjVer">
            <summary>
            Indicates if the identifier is valid ObjVer format.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsObjID">
            <summary>
            Indicates if the identifier is valid ObjID format.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.IsIDAvailable">
            <summary>
            Indicates if there is a valid ID value available (even if it wasn't resolved).
            Returns <c>true</c> if the id has been resolved, or if the identifier was set
            with an id or ObjID and the id isn't considered unresolved (-1).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.UnsafeID">
            <summary>
            Returns an ID value if available (even if it wasn't resolved).
            The ID is available if it has been resolved, or if the identifier was set
            with an id or ObjID and the id isn't considered unresolved (-1).
            It is unsafe because it hasn't necessary been resolved (verified to exist) in the current vault.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.Resolved">
            <summary>
            Is this identifier is resolved to valid ID. Use IsResolved.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.Empty">
            <summary>
            Is this MFIdentifier empty == unset value. Use IsEmpty.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.UnresolvedID">
            <summary>
            Value of unresolved ID used as "error-value" (for this structure type).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.ResolvedType">
            <summary>
            The type which the identifier was resolved as.
            Null if the identifier is not resolved.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifier.SetAsType">
            <summary>
            Types of values set into MFIdentifier.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAsType.Unset">
            <summary>
            The content is unset.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAsType.Alias">
            <summary>
            The content is set as alias.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAsType.ID">
            <summary>
            The content is set as ID.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAsType.Guid">
            <summary>
            The content is set as Guid.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.MFIdentifier.SetAsType.ObjID">
            <summary>
            The content is set as ObjID.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifier.LookupID">
            <summary>
            Delegate to lookup an id with an alias or guid.
            </summary>
            <param name="vault">The vault object.</param>
            <param name="alias">The alias that should be resolved into the id.</param>
            <returns>The id of the metadata structure element.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifier.LookupIDID">
            <summary>
            Delegate to lookup an id with an id. 
            </summary>
            <param name="vault">The vault object.</param>
            <param name="id">The id that should be resolved into the id.</param>
            <returns>The id of the metadata structure element.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.VaultElementFinder.FromAlias">
            <summary>
            A delegate that will lookup an element by alias.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.VaultElementFinder.FromGuid">
            <summary>
            A delegate that will lookup an element by GUID.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFIdentifier.VaultElementFinder.FromID">
            <summary>
            A delegate that will lookup/verify an element by ID.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFIdentifierJsonConverter">
            <summary>
            Json converter for MFIdentifier for serialization purposes.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifierJsonConverter.CanConvert(System.Type)">
            <summary>
            Can the object be converted with this.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifierJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serialize MFIdentifier as JSON.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFIdentifierJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read JSON into MFIdentifier.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA">
            <summary>
            Json compatible adaptor for the MFilesAPI Expression type.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1">
            <summary>
            Base abstract class for implementing Json compatible adaptors for MFilesAPI objects.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.IMFJsonAdaptor`1">
            <summary>
            Interface for implementing Json compatible adaptors for MFilesAPI objects.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.IMFJsonAdaptor`1.LoadApiObject(`0)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="apiObject">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.IMFJsonAdaptor`1.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.IMFJsonAdaptor`1.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.IMFJsonAdaptor`1.ToJson(System.Boolean)">
            <summary>
            Serialize the object to a json string.
            </summary>
            <param name="format">Indicates if the json should be formated with new lines and indentation.</param>
            <returns>Json string.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.#ctor(`0)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="apiObject">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.LoadApiObject(`0)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="apiObject">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.ToJson(System.Boolean)">
            <summary>
            Serialize the object to a json string.
            </summary>
            <param name="format">Indicates if the json should be formated with new lines and indentation.</param>
            <returns>Json string.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonObjectAdaptor`1.ResolveID(MFiles.VAF.Configuration.MFIdentifier,System.Type,MFilesAPI.Vault)">
            <summary>
            Resolves the id of the of the identifier if the vault object is not null.
            </summary>
            <param name="mfId">The MFIdentifier to resolve.</param>
            <param name="type">The type to resolve the MFIdentifer as.</param>
            <param name="vault">The vault instance to use for MFIdentifer resolution.</param>
            <returns>The resolved id.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.#ctor(MFilesAPI.Expression)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="expression">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.FromJson(System.String)">
            <summary>
            Creates an instance from a json representation.
            </summary>
            <param name="json">The json representation of the object.</param>
            <returns>The deserialized instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.LoadApiObject(MFilesAPI.Expression)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="expression">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.GetDataFunctionCallForExpression(MFilesAPI.MFDataFunction)">
            <summary>
            Helper method for converting an MFDataFunction into a DataFunctionCall.
            </summary>
            <param name="dataFunction">The dataFunction to convert.</param>
            <returns>The equivilent DataFunctionCall.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.FullTextSearchFlags">
            <summary>
            Maps to Expression's DataAnyFieldFTSFlags Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.FileType">
            <summary>
            Maps to Expression's DataFileValueType Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.SegmentSize">
            <summary>
            Maps to Expression's DataObjectIDSegmentSegmentSize Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.PermissionsType">
            <summary>
            Maps to Expression's DataPermissionsType Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.DataFunction">
            <summary>
            Maps to Expression's DataPropertyValueDataFunction, DataStatusValueDataFunction, DataTypedValueDataFunction Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.ParentChildBehavior">
            <summary>
            Maps to Expression's DataPropertyValueParentChildBehavior, DataTypedValueParentChildBehavior Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.PropertyDef">
            <summary>
            Maps to Expression's DataPropertyValuePropertyDef Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.StatusType">
            <summary>
            Maps to Expression's DataStatusValueType Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.DataType">
            <summary>
            Maps to Expression's DataTypedValueDatatype Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.ValueList">
            <summary>
            Maps to Expression's DataTypedValueValueList Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.IndirectionLevels">
            <summary>
            Maps to Expression's IndirectionLevels Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.ExpressionJA.Type">
            <summary>
            Maps to Expression's Type Property.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA">
            <summary>
            Json adaptor object for <see cref="T:MFilesAPI.MFFullTextSearchFlags"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.#ctor(MFilesAPI.MFFullTextSearchFlags)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="fullTextSearchFlags">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.op_Implicit(MFilesAPI.MFFullTextSearchFlags)~MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA">
            <summary>
            Converts a <see cref="T:MFilesAPI.MFFullTextSearchFlags"/> into <see cref="T:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA"/>.
            </summary>
            <param name="fullTextSearchFlags">API object.</param>
            <returns>Json adaptor.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.op_Implicit(MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA)~MFilesAPI.MFFullTextSearchFlags">
            <summary>
            Converts a <see cref="T:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA"/> into <see cref="T:MFilesAPI.MFFullTextSearchFlags"/>.
            </summary>
            <param name="fullTextSearchFlags">Json adaptor.</param>
            <returns>API object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.LoadApiObject(MFilesAPI.MFFullTextSearchFlags)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="fullTextSearchFlags">The API object used to set the values of this object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.UpdateFlag(MFilesAPI.MFFullTextSearchFlags,System.Boolean)">
            <summary>
            Updates the underlying flags value, setting or unsetting
            it based on the set param.
            </summary>
            <param name="flag">The flag to set or unset.</param>
            <param name="set"><c>True</c> to set the flag, <c>false</c> to unset it.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.IsFlagSet(MFilesAPI.MFFullTextSearchFlags)">
            <summary>
            Checks whether the object's underlying flags value has the specified flag.
            </summary>
            <param name="flag">The flag to check.</param>
            <returns><c>True</c> if the flag is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.Stemming">
            <summary>
            Maps to <see cref="F:MFilesAPI.MFFullTextSearchFlags.MFFullTextSearchFlagsStemming"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.AllWords">
            <summary>
            Maps to <see cref="F:MFilesAPI.MFFullTextSearchFlags.MFFullTextSearchFlagsTypeAllWords"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.AnyWords">
            <summary>
            Maps to <see cref="F:MFilesAPI.MFFullTextSearchFlags.MFFullTextSearchFlagsTypeAnyWords"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.LookInFileData">
            <summary>
            Maps to <see cref="F:MFilesAPI.MFFullTextSearchFlags.MFFullTextSearchFlagsLookInFileData"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.LookInMetaData">
            <summary>
            Maps to <see cref="F:MFilesAPI.MFFullTextSearchFlags.MFFullTextSearchFlagsLookInMetaData"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.FullTextSearchFlagsJA.Value">
            <summary>
            Underlying "wrapped" value of the object.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor">
            <summary>
            Json adaptor for the item value in <see cref="T:MFilesAPI.Lookup"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.#ctor(MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem)">
            <summary>
            Constructor.
            </summary>
            <param name="reference">The reference.</param>
            <param name="structureType">The structure type of the reference.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.op_Implicit(System.Int32)~MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor">
            <summary>
            Converts a valuelist item id into a JsonLookupItemAdaptor.
            </summary>
            <param name="id">The id of the value list item.</param>
            <returns>The adapted id value.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ResolveID(MFilesAPI.Vault,System.Boolean)">
            <summary>
            Resolve the id of the current reference.
            </summary>
            <param name="vault">The vault to resolve the reference in.</param>
            <param name="forceRefresh">Indicates whether resolution should be retried if the reference has already been resolved.</param>
            <returns>The resolved id of the reference.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.GetReference(MFilesAPI.MFMetadataStructureItem)">
            <summary>
            Gets the reference if it matches the passed type, otherwise null.
            </summary>
            <param name="structureType">The desired reference type.</param>
            <returns>The reference if it matches the passed type, otherwise null.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.SetReference(MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Set this objects reference to the type and value passed.
            </summary>
            <param name="structureType">The reference value's structure type.</param>
            <param name="value">The reference value.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ObjType">
            <summary>
            A reference to an object type.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemObjectType"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.PropertyDef">
            <summary>
            A reference to a property def.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemPropertyDef"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ObjectClass">
            <summary>
            A reference to a class.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemClass"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.Workflow">
            <summary>
            A reference to a workflow.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemWorkflow"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.State">
            <summary>
            A reference to a state.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemState"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.Transition">
            <summary>
            A reference to a state transition.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemStateTransition"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.NamedACL">
            <summary>
            A reference to a named ACL.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemNamedACL"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.UserGroup">
            <summary>
            A reference to a user group.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemUserGroup"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.User">
            <summary>
            A reference to a user.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemUser"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ClassGroup">
            <summary>
            A reference to a class group.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemClassGroup"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.View">
            <summary>
            A reference to a view.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemViewDef"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ValueListItem">
            <summary>
            A reference to a value list item.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemValueListItem"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ObjID">
            <summary>
            Alias of <see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ValueListItem"/>.
            Will never be serialized.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ValueList">
            <summary>
            A reference to a value list.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemValueList"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.ID">
            <summary>
            A reference to a value of an unknow structure type.
            Only available when <c><see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> = <see cref="F:MFilesAPI.MFMetadataStructureItem.MFMetadataStructureItemNone"/></c>
            Will not be serialized if unavailable.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.Reference">
            <summary>
            The reference currently set in the object. Available regardless of <see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType">
            <summary>
            The type of structure item the current reference refers to.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.Type">
            <summary>
            The MFilesAPI type that the <see cref="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptor.StructureType"/> corresponds to used
            for resolving id's with <see cref="T:MFiles.VAF.Configuration.MFIdentifier"/>.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptorJsonConverter">
            <summary>
            Json converter for MFIdentifier for serialization purposes.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptorJsonConverter.CanConvert(System.Type)">
            <summary>
            Can the object be converted with this.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptorJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serialize MFIdentifier as JSON.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptorJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read JSON into MFIdentifier.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonLookupItemAdaptorJsonConverter.CanWrite">
            <summary>
            Indicates whether the converter can write (serialize) an object to json.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor">
            <summary>
            Json adaptor for the underlying value in <see cref="T:MFilesAPI.TypedValue"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.propsByValueType">
            <summary>
            Mapping between <see cref="T:MFilesAPI.MFDataType"/> values and <see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/>
            indicating which property is serialized for a given <see cref="T:MFilesAPI.MFDataType"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.#ctor(MFilesAPI.MFDataType,System.Object)">
            <summary>
            Constructor that sets the value immediately.
            </summary>
            <param name="dataType">The datatype of the value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.SetValue(MFilesAPI.MFDataType,System.Object)">
            <summary>
            Sets the object's underlying value with an explicit data type.
            </summary>
            <param name="dataType">The data type of the value being set.</param>
            <param name="value">The value being set.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.AssertNotNull(System.Object)">
            <summary>
            Helper method to ensure the value being set is not null.
            </summary>
            <param name="value">The value being set.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Value">
            <summary>
            The underlying value of the object.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.IsNull">
            <summary>
            Indicates when the value is considered null.
            Only available when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Null"/></c>
            Will only be serialized if available, and in those cases, it is always set to <c>true</c>.
            
            Setting the value to <c>false</c> will have no effect on the object.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Boolean">
            <summary>
            Boolean value.
            Only available when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Boolean"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.Boolean"/> and values that are implicitly cast to it.		
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Text">
            <summary>
            Text value.
            Only available when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Text"/></c>
            Will only be serialized if available.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Integer">
            <summary>
            Integer value.
            Only available when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Integer"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.Int64"/> and values that are implicitly cast to it.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Float">
            <summary>
            Float value.
            Only available when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Float"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.Double"/> and values that are implicitly cast to it.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Date">
            <summary>
            Date value.
            Only available (not null) when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Date"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.DateTime"/> and strings that can be parsed to it.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Time">
            <summary>
            Time value.
            Only available (not null) when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Time"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.DateTime"/> and strings that can be parsed to it.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Timestamp">
            <summary>
            Timestamp value.
            Only available (not null) when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Timestamp"/></c>
            Will only be serialized if available.
            
            Accepts <see cref="T:System.DateTime"/> and strings that can be parsed to it.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Lookup">
            <summary>
            Lookup value.
            Only available (not null) when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Date"/></c>
            Will only be serialized if available.
            
            Accepts all types adaptable via <see cref="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.TryAdapt(System.Object,MFiles.VAF.Configuration.JsonAdaptor.LookupJA@)"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.Lookups">
            <summary>
            Lookups value.
            Only available (not null) when <c><see cref="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty"/> = <see cref="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Lookups"/></c>
            Will only be serialized if available.
            
            Accepts all types adaptable via <see cref="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.TryAdapt(System.Object,MFiles.VAF.Configuration.JsonAdaptor.LookupsJA@)"/>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.valueProperty">
            <summary>
            Indicates the property that will be serialized for the current value.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty">
            <summary>
            The value properties that are serialized from this object based on the <see cref="T:MFilesAPI.MFDataType"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Undefined">
            <summary>
            Unknown or uninitialized property/datatype.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Text">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeText"/> and <see cref="F:MFilesAPI.MFDataType.MFDatatypeMultiLineText"/>
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Boolean">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeBoolean"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Integer">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeInteger"/> and <see cref="F:MFilesAPI.MFDataType.MFDatatypeInteger64"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Float">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeFloating"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Date">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeDate"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Time">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeTime"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Timestamp">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeTimestamp"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Lookup">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeLookup"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Lookups">
            <summary>
            Property used for <see cref="F:MFilesAPI.MFDataType.MFDatatypeMultiSelectLookup"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.JsonValueAdaptor.ValueProperty.Null">
            <summary>
            Used for any <see cref="T:MFilesAPI.MFDataType"/> when the value is null. Serialized to "isNull".
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.LookupJA">
            <summary>
            Json compatible adaptor for <see cref="T:MFilesAPI.Lookup"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.#ctor(MFilesAPI.Lookup)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="lookup">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.#ctor(System.Int32)">
            <summary>
            Constructor that initializes itself with a lookup id.
            </summary>
            <param name="id">The lookup item id.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.#ctor(System.String)">
            <summary>
            Constructor that initializes itself with a lookup reference.
            </summary>
            <param name="reference">The lookup item reference.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.op_Implicit(System.Int32)~MFiles.VAF.Configuration.JsonAdaptor.LookupJA">
            <summary>
            Converts a valuelist item id into a LookupJA.
            </summary>
            <param name="id">The id of the value list item.</param>
            <returns>The adapted id value.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.op_Implicit(System.String)~MFiles.VAF.Configuration.JsonAdaptor.LookupJA">
            <summary>
            Converts a valuelist item reference into a LookupJA.
            </summary>
            <param name="reference">The id of the value list item.</param>
            <returns>The adapted id value.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.TryAdapt(System.Object,MFiles.VAF.Configuration.JsonAdaptor.LookupJA@)">
            <summary>
            Attempts to convert a value into a json adapted lookup.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="lookup">The created lookup (when the method succeeds). </param>
            <returns><c>True</c> if the conversion was successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.LoadApiObject(MFilesAPI.Lookup)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="lookup">The API object used to set the values of this object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.ToApiObject(MFilesAPI.Vault,System.Boolean)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <param name="negateGroups">For instances where user and group lookups are intermixed, the group values should be negated.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.Deleted">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.Deleted</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.DisplayID">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.DisplayID</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.DisplayIDAvailable">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.DisplayIDAvailable</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.DisplayValue">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.DisplayValue</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.Hidden">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.Hidden</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.Item">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.Item</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.ItemGUID">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.ItemGUID</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.ObjectFlags">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.ObjectFlags</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.ObjectType">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.ObjectType</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.LookupJA.Version">
            <summary>
            Maps to <see cref="T:MFilesAPI.Lookup"/><c>.Version</c>.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA">
            <summary>
            Json compatible adaptor for <see cref="T:MFilesAPI.Lookups"/>.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3">
            <summary>
            Abstract class implementing Json compatible adaptors for MFilesAPI collections.
            </summary>
            <typeparam name="T">The api type with with this json adaptor is compatible.</typeparam>
            <typeparam name="IT">The item type which this collection contains.</typeparam>
            <typeparam name="TI">The item type which the adapted API type contains.</typeparam>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.#ctor(`0)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="apiCollection">An api collection to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.LoadApiObject(`0)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="apiObject">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFJsonCollectionAdaptor`3.ToJson(System.Boolean)">
            <summary>
            Serialize the object to a json string.
            </summary>
            <param name="format">Indicates if the json should be formated with new lines and indentation.</param>
            <returns>Json string.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.#ctor(MFilesAPI.Lookups)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="lookups">An api collection to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.TryAdapt(System.Object,MFiles.VAF.Configuration.JsonAdaptor.LookupsJA@)">
            <summary>
            Attempts to convert a value into a json adapted lookups.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="lookups">The created lookups (when the method succeeds). </param>
            <returns><c>True</c> if the conversion was successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.LoadApiObject(MFilesAPI.Lookups)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="lookups">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.LookupsJA.ToApiObject(MFilesAPI.Vault,System.Boolean)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <param name="negateGroups">For instances where user and group lookups are intermixed, the group values should be negated.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter">
            <summary>
            Converts MFilesAPI enums to between their standard values and their custom json serialized forms.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.namesByTypeAndValue">
            <summary>
            Mapping of serializable names to enum values.
            Used to lookup the names when the value is known.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.valuesByTypeAndName">
            <summary>
            Mapping of enum values to serializable names.
            Used to lookup the values when the name is known.
            </summary>
            <remarks>
            Created at runtime from namesByValue.
            </remarks>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.GetEnumName(System.Type,System.Enum)">
            <summary>
            Returns the serializable name of an enum value.
            </summary>
            <param name="enumType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.MFEnumJsonConverter.GetEnumValue(System.Type,System.String)">
            <summary>
            Returns the value of an enum by the serializable name.
            </summary>
            <param name="enumType"></param>
            <param name="shortName"></param>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA">
            <summary>
            Json compatible adaptor for the MFilesAPI PropertyDefOrObjectTypeJA type.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.#ctor(MFilesAPI.PropertyDefOrObjectType)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="propertyDefOrObjectType">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.LoadApiObject(MFilesAPI.PropertyDefOrObjectType)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="propertyDefOrObjectType">The API object used to set the values of this object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.PropertyDef">
            <summary>
            Maps to the PropertyDefOrObjectType's ID property when IsPropertyDef = <c>true</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.ObjType">
            <summary>
            Maps to the PropertyDefOrObjectType's ID property when IsPropertyDef = <c>false</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypeJA.IsPropertyDef">
            <summary>
            Maps to the PropertyDefOrObjectType's PropertyDef property.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypesJA">
            <summary>
            Json compatible adaptor for <see cref="T:MFilesAPI.PropertyDefOrObjectTypes"/>.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypesJA.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypesJA.#ctor(MFilesAPI.PropertyDefOrObjectTypes)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="propertyDefOrObjectTypes">An api collection to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypesJA.LoadApiObject(MFilesAPI.PropertyDefOrObjectTypes)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="propertyDefOrObjectTypes">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.PropertyDefOrObjectTypesJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA">
            <summary>
            Json compatible adaptor for the MFilesAPI SearchCondition type.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.#ctor(MFilesAPI.SearchCondition)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="searchCondition">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.LoadApiObject(MFilesAPI.SearchCondition)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="searchCondition">The API object used to set the values of this object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.ConditionType">
            <summary>
            Maps to SearchCondition's ConditionType Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.Expression">
            <summary>
            Maps to SearchCondition's Expression Property.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionJA.TypedValue">
            <summary>
            Maps to SearchCondition's TypedValue Property.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA">
            <summary>
            Json compatible adaptor for the MFilesAPI SearchConditions collection.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA.#ctor">
            <summary>
            Simple constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA.#ctor(MFilesAPI.SearchConditions)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="searchConditions">An api collection to initialize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA.LoadApiObject(MFilesAPI.SearchConditions)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivalent of the passed API object.
            </summary>
            <param name="searchConditions">The API object used to set the values of this object.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivalent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or GUID's referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA.Parse(System.String)">
            <summary>
            Parses a Serialized <see cref="T:MFilesAPI.SearchConditions"/> string into an empty <see cref="T:MFiles.VAF.Configuration.JsonAdaptor.SearchConditionsJA"/> object.
            </summary>
            <param name="serializedString">Serialized <see cref="T:MFilesAPI.SearchConditions"/> string.</param>
        </member>
        <member name="T:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA">
            <summary>
            Json compatible adaptor for <see cref="T:MFilesAPI.TypedValue"/>.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.TypedValueSignature_Integer64">
            <summary>
            The signature of an Integer64 datatype in an exported search conditions string.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.TypedValueSignature_FILETIME">
            <summary>
            The signature of an FILETIME datatype in an exported search conditions string.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.#ctor">
            <summary>
            Simple Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.#ctor(MFilesAPI.TypedValue)">
            <summary>
            Constructor that initializes itself with an existing api object.
            </summary>
            <param name="typedValue">An api object instance to initailize this object with.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.FromJson(System.String)">
            <summary>
            Creates an instance from a json representation.
            </summary>
            <param name="json">The json representation of the object.</param>
            <returns>The deserialized instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.LoadApiObject(MFilesAPI.TypedValue)">
            <summary>
            (Re-)Initializes this adaptor object to be the equivilent of the passed API object.
            </summary>
            <param name="typedValue">The API object used to set the values of this object.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.ToApiObject(MFilesAPI.Vault)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.ToApiObject(MFilesAPI.Vault,System.Boolean)">
            <summary>
            Converts this JsonCompatible object to an equivilent API object. 
            </summary>
            <param name="vault">A vault instance used to resolve aliases or guids referenced in the adaptor object.</param>
            <param name="negateGroups">For instances where user and group lookups are intermixed, the group values should be negated.</param>
            <returns>An API object instance.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.Validate(MFilesAPI.Vault,System.String)">
            <summary>
            Performs validation checks on the object and sub-objects and returns
            any findings.
            </summary>
            <param name="vault">The vault.</param>
            <param name="path">The path to assign to validation findings for this object.</param>
            <returns>A list of validation findings.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.FileTimeToDate(MFilesAPI.TypedValue)">
            <summary>
            Resolves the date time value stored in a typed value with a FILETIME datatype.
            </summary>
            <param name="typedValue">The typedvalue.</param>
            <returns>The datetime.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.DateToFileTimeValue(System.DateTime)">
            <summary>
            Creates a typed value with datatype FILETIME and a value equivilent to the passed DateTime.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.ToggleTypedValueDataType(MFilesAPI.TypedValue,System.String,System.String)">
            <summary>
            Safely changes the datatype of a typed value without losing the value itself.
            Used to set Datatypes which the API technically does not support.
            </summary>
            <param name="typedValue">The typedvalue to convert.</param>
            <param name="fromSig">The signature of the typedValue's current datatype in an exported search conditions string.</param>
            <param name="toSig">The signature of the desired datatype in an exported search conditions string.</param>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.DataType">
            <summary>
            Maps to <see cref="T:MFilesAPI.TypedValue"/><c>.DataType</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.Value">
            <summary>
            Maps to <see cref="T:MFilesAPI.TypedValue"/><c>.Value</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.ValueAdaptor">
            <summary>
            Wrapper for the Value field.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.DisplayValue">
            <summary>
            Maps to <see cref="T:MFilesAPI.TypedValue"/><c>.DisplayValue</c>.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.JsonAdaptor.TypedValueJA.IsNull">
            <summary>
            Maps to <see cref="T:MFilesAPI.TypedValue"/><c>.IsNULL</c>.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFNamedACLAttribute">
            <summary>
            Named Access Control List.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFNamedACLAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFNamedACLAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFObjectAttribute">
            <summary>
            M-Files Object.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFObjectAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFObjectAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFObjTypeAttribute">
            <summary>
            Object Type.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFObjTypeAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFSkipAttribute">
            <summary>
            Attribute noting that this object should not be traversed while validation.
            As Validation reads the value of object, this might cause problems in some cases, and this Attribute can be used to "fix" problem easy.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFStateAttribute">
            <summary>
            Workflow State.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStateAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStateAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStateAttribute.Workflow">
            <summary>
            Reference to Workflow this state belongs to.
            Can be set manually if the object is not already hierarchially a member of the MFWorkflow object.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFStateTransitionAttribute">
            <summary>
            Workflow State Transition.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStateTransitionAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFStateTransitionAttribute.ToString">
            <summary>
            Customized String representation with attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStateTransitionAttribute.Workflow">
            <summary>
            Reference to Workflow this transition belongs to.
            Can be set manually if the object is not already hierarchially a member of the MFWorkflow object.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStateTransitionAttribute.FromState">
            <summary>
            Reference to the From state. Workflow must be known for this to be validated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFStateTransitionAttribute.ToState">
            <summary>
            Reference to the To state. Workflow must be known for this to be validated.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFUserGroupAttribute">
            <summary>
            UserGroup object.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFUserGroupAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFValueListAttribute">
            <summary>
            ValueList.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFValueListAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFValueListAttribute.Items">
            <summary>
            Optional references to value list items of the value list.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFValueListAttribute.AllowObjTypes">
            <summary>
            Indicates whether the attribute allows/matches all value lists (including real object types).
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFValueListItemAttribute">
            <summary>
            ValueList Item.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFValueListItemAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFValueListItemAttribute.ValueList">
            <summary>
            Reference to valuelist this item belongs to.
            Not needed when nested under MFValueList.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFViewAttribute">
            <summary>
            View object.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFViewAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.MFWorkflowAttribute">
            <summary>
            Workflow.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.MFWorkflowAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.MFWorkflowAttribute.States">
            <summary>
            Reference to states of the workflow.
            Can be set manually, if not available as members of this class with MFState.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.PropertyValueSetter">
            <summary>
            Property value resolution class, used for static value resolution.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.PropertyValueSetter.Property">
            <summary>
            Property for which the value is to be set.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.PropertyValueSetter.Value">
            <summary>
            Value to set on the property.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.Resources.TextResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.CannotBeNull">
            <summary>
              Looks up a localized string similar to Cannot be null..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.CannotConvertNull">
            <summary>
              Looks up a localized string similar to Cannot convert a null value to the type &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ClassNotObjType">
            <summary>
              Looks up a localized string similar to The object type is not &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.Configuration">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ConfigurationIncomplete">
            <summary>
              Looks up a localized string similar to The configuration for the module &quot;{0}&quot; is incomplete..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ConfigurationKeyDeprecated">
            <summary>
              Looks up a localized string similar to The configuration key is deprecated..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ConfigurationKeyDeprecatedWithReplacement">
            <summary>
              Looks up a localized string similar to The configuration key is deprecated. Please use &quot;{0}&quot; instead..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ConfigurationKeyDeprecatedWithReplacementUnambiguousValue">
            <summary>
              Looks up a localized string similar to The deprecated configuration key ({0}) and the configuration key replacing it ({1}) both have a value specified..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ConfigurationUnserializationFailed">
            <summary>
              Looks up a localized string similar to The unserialization of the configuration &quot;{0}&quot; failed..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.CustomFailureTypeKey">
            <summary>
              Looks up a localized string similar to Key.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.DataFunctionLeftCharsNotSupported">
            <summary>
              Looks up a localized string similar to The &quot;LeftChars&quot; data function is not supported in search conditions..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.DynamicListNameMissing">
            <summary>
              Looks up a localized string similar to The DynamicList &apos;ListName&apos; must be explicitly defined..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.EmptyValue">
            <summary>
              Looks up a localized string similar to Empty reference value in the &quot;{0}&quot; key..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.EmptyValueFor">
            <summary>
              Looks up a localized string similar to Empty reference value for &quot;{0}&quot; in &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ErrorConvertingValue">
             <summary>
               Looks up a localized string similar to Error converting value {0} to type &quot;{1}&quot;.
              
            {2}.
             </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ErrorRealObjTypesNotAllowed">
            <summary>
              Looks up a localized string similar to Object types are not allowed..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ExceptionDeprecatedMemberReplacementMemberDeprecatedToo">
            <summary>
              Looks up a localized string similar to The key &quot;{0}&quot; and its replacement key, &quot;{1}&quot;, are both deprecated..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ExceptionDeprecatedMemberReplacementMemberNotFoundOrUnambiguous">
            <summary>
              Looks up a localized string similar to The key &quot;{0}&quot; is deprecated, and the replacement key, &quot;{1}&quot;, is either not found or not unambiguous..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ExceptionDeprecatedMemberReplacementMemberNotGood">
            <summary>
              Looks up a localized string similar to The key &quot;{0}&quot; is deprecated, and the replacement key, &quot;{1}&quot;, is incompatible..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.IllegalNullValueSettings">
            <summary>
              Looks up a localized string similar to Null values must be set with the &quot;IsNull&quot; property..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.InvalidItemReference">
            <summary>
              Looks up a localized string similar to The item reference {0} is not valid..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.InvalidPropertyDefOrObjectType">
            <summary>
              Looks up a localized string similar to Either the &quot;PropertyDef&quot; or the &quot;ObjType&quot; property must be set. Both cannot be set at the same time..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.KeyMissingFromNamedValueStorage">
            <summary>
              Looks up a localized string similar to The given key is missing in the named value storage: &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseDecodingFailed">
            <summary>
              Looks up a localized string similar to License decoding failed..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseExpireNever">
            <summary>
              Looks up a localized string similar to Never.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseFormatError">
            <summary>
              Looks up a localized string similar to License is incorrect. The file is either not a license or it is corrupt or falsified..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseHasExpired">
            <summary>
              Looks up a localized string similar to The license is expired..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseIncorrectApplication">
            <summary>
              Looks up a localized string similar to The license is not for this application..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseIncorrectServerSerial">
            <summary>
              Looks up a localized string similar to License requires a different server license..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseInGracePeriod">
            <summary>
              Looks up a localized string similar to The license is in grace period. Renew the license as soon as possible..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseIsRequiredButMissing">
            <summary>
              Looks up a localized string similar to License is required but not installed..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseLicensedTo">
            <summary>
              Looks up a localized string similar to Licensed to.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseLicenseExpires">
            <summary>
              Looks up a localized string similar to License expires.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseMaintenanceExpires">
            <summary>
              Looks up a localized string similar to Maintenance subscription expires.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseMaintenanceHasExpired">
            <summary>
              Looks up a localized string similar to The maintenance subscription does not cover this version..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNoLicenseNeeded">
            <summary>
              Looks up a localized string similar to Application does not need a license..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNotAllowedInThisServerVersion">
            <summary>
              Looks up a localized string similar to The license is not valid for this server version..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNotAllowedInThisVault">
            <summary>
              Looks up a localized string similar to The license is not valid for this vault..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNumberConcurrent">
            <summary>
              Looks up a localized string similar to Maximum number of concurrent user licenses.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNumberNamedUsers">
            <summary>
              Looks up a localized string similar to Maximum number of named user licenses.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseNumberReadOnly">
            <summary>
              Looks up a localized string similar to Maximum number of read-only licenses.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseRestrictedToVaults">
            <summary>
              Looks up a localized string similar to Valid for {0} identified vault(s)..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseSerialNumber">
            <summary>
              Looks up a localized string similar to Serial number.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseServerSerial">
            <summary>
              Looks up a localized string similar to Required server serial number.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseTooManyConcurrentUsers">
            <summary>
              Looks up a localized string similar to Too many concurrent user licenses on the server..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseTooManyNamedUsers">
            <summary>
              Looks up a localized string similar to Too many named user licenses on the server..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseTooManyReadOnlyUsers">
            <summary>
              Looks up a localized string similar to Too many read-only licenses on the server..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LicenseUserGroupTooManyMembers">
            <summary>
              Looks up a localized string similar to The user group &quot;{0}&quot; has over {1} members..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LookupJA_MissingReference">
            <summary>
              Looks up a localized string similar to Lookup reference is not specified correctly..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.LookupJA_StructureTypeUnknown">
            <summary>
              Looks up a localized string similar to The alias &quot;{0}&quot; cannot be resolved, the structure type could not be inferred..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionIsNotValidGuid">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is not valid GUID..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionMultipleInstances">
            <summary>
              Looks up a localized string similar to Multiple instances of type &quot;{0}&quot; were found with alias &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundAlias">
            <summary>
              Looks up a localized string similar to Vault element with the alias &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundAliasWithType">
            <summary>
              Looks up a localized string similar to Vault element of type &quot;{1}&quot; with the alias &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundGuid">
            <summary>
              Looks up a localized string similar to Vault element with the GUID &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundGuidWithType">
            <summary>
              Looks up a localized string similar to Vault element of type &quot;{1}&quot; with the GUID &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundID">
            <summary>
              Looks up a localized string similar to Vault element with the ID &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionNotFoundIDWithType">
            <summary>
              Looks up a localized string similar to Vault element of type &quot;{1}&quot; with the ID &quot;{0}&quot; is not found..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MFIdentifierExceptionValueListNotSet">
            <summary>
              Looks up a localized string similar to The value list cannot be resolved..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MissingPropertyException">
            <summary>
              Looks up a localized string similar to No &quot;{0}&quot; property for &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MissingValueFor">
            <summary>
              Looks up a localized string similar to The value of the &quot;{0}&quot; key is null or empty..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MissingValueForIn">
            <summary>
              Looks up a localized string similar to The value of the &quot;{0}&quot; key in the &quot;{1}&quot; element is null or empty..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.MissingValueType">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.NoReference">
            <summary>
              Looks up a localized string similar to No reference has been set..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.NullValue">
            <summary>
              Looks up a localized string similar to Null value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.NullValueInStructureIdentifierList">
            <summary>
              Looks up a localized string similar to The collection of configuration items contains a null or an incorrect value..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.NumberTooBig">
            <summary>
              Looks up a localized string similar to The numeric value must be {0} or lower..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.NumberTooSmall">
            <summary>
              Looks up a localized string similar to The numeric value must be {0} or higher..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ObjectTypeMemberMissingException">
            <summary>
              Looks up a localized string similar to No &quot;{0}&quot; property for &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ParseErrorException">
            <summary>
              Looks up a localized string similar to The {0} string &quot;{1}&quot; is not valid..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ProcessingMemberFailedException">
            <summary>
              Looks up a localized string similar to Unexpected error while processing the &quot;{0}&quot; key..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefAssociation">
            <summary>
              Looks up a localized string similar to Has the property &quot;{0}&quot; but the &quot;required&quot; setting is wrong. The property should {1} for the class..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefAssociationNeedClass">
            <summary>
              Looks up a localized string similar to Cannot resolve the property association &quot;{0}&quot; without a class..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefNoAssociation">
            <summary>
              Looks up a localized string similar to Does not contain the property &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefNotObjType">
            <summary>
              Looks up a localized string similar to Cannot be used with the object type &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefWrongType">
            <summary>
              Looks up a localized string similar to Does not represent the data type &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropDefWrongValuelist">
            <summary>
              Looks up a localized string similar to Does not use the value list &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropertyDefOrObjectTypeRequired">
            <summary>
              Looks up a localized string similar to Either the &quot;PropertyDef&quot; or the &quot;ObjType&quot; property must be set..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropertyDefOrObjectTypeRestricted">
            <summary>
              Looks up a localized string similar to The &quot;ObjType&quot; and &quot;PropertyDef&quot; properties cannot be set at the same time..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropertyRequiredAny">
            <summary>
              Looks up a localized string similar to Any.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropertyRequiredNo">
            <summary>
              Looks up a localized string similar to not be required.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.PropertyRequiredYes">
            <summary>
              Looks up a localized string similar to be required.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ReferenceNotResolved">
            <summary>
              Looks up a localized string similar to The reference to the following metadata structure element could not be resolved: {0}.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.StateFound">
            <summary>
              Looks up a localized string similar to Is in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.StateMissing">
            <summary>
              Looks up a localized string similar to Is missing, required in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.StateNotIn">
            <summary>
              Looks up a localized string similar to Is not in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.StatusDashboard_ConfigureButtonLabel">
            <summary>
              Looks up a localized string similar to Configure.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.StringTooLong">
            <summary>
              Looks up a localized string similar to The string value cannot be longer than {0} characters..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionFound">
            <summary>
              Looks up a localized string similar to Is in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionFoundWithFrom">
            <summary>
              Looks up a localized string similar to Is in the workflow &quot;{0}&quot; and the initial state is &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionFoundWithFromTo">
            <summary>
              Looks up a localized string similar to Is in the workflow &quot;{0}&quot;, and is from the state &quot;{1}&quot; to the state &quot;{2}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionFoundWithTo">
            <summary>
              Looks up a localized string similar to Is in the workflow &quot;{0}&quot; and the target state is &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionMissing">
            <summary>
              Looks up a localized string similar to Is missing, required in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionNeedsWorkflow">
            <summary>
              Looks up a localized string similar to No workflow specified. Unable to verify the initial and target states..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionNotCorrectFrom">
            <summary>
              Looks up a localized string similar to The initial state is not &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionNotCorrectFromTo">
            <summary>
              Looks up a localized string similar to Is not from the state &quot;{0}&quot; to the state &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionNotCorrectTo">
            <summary>
              Looks up a localized string similar to The target state is not &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TransitionNotIn">
            <summary>
              Looks up a localized string similar to Is not in the workflow &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeClass">
            <summary>
              Looks up a localized string similar to Class.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeClassGroup">
            <summary>
              Looks up a localized string similar to Class group.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeEventHandler">
            <summary>
              Looks up a localized string similar to Event handler.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeNACL">
            <summary>
              Looks up a localized string similar to Named access control list.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeObjectType">
            <summary>
              Looks up a localized string similar to Object type.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypePropDef">
            <summary>
              Looks up a localized string similar to Property definition.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeStateTransition">
            <summary>
              Looks up a localized string similar to Workflow state transition.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeUnknownException">
            <summary>
              Looks up a localized string similar to Unknown metadata item type..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeUser">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeUserGroup">
            <summary>
              Looks up a localized string similar to User group.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeValuelist">
            <summary>
              Looks up a localized string similar to Value list.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeValuelistItem">
            <summary>
              Looks up a localized string similar to Value list item.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeView">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeWorkflow">
            <summary>
              Looks up a localized string similar to Workflow.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.TypeWorkflowState">
            <summary>
              Looks up a localized string similar to Workflow state.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.UnexpectedEnumValueJson">
            <summary>
              Looks up a localized string similar to Unsupported token type &quot;{0}&quot; while parsing an enumeration..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.UnknownValuelistText">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.UnrecognizedLookupJsonType">
            <summary>
              Looks up a localized string similar to Unrecognized JSON value type for the following value list item: {0}.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.UnrecognizedTranslatableContentJsonType">
            <summary>
              Looks up a localized string similar to Unrecognized JSON value type for the following item: {0}.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValidationProtectionException">
            <summary>
              Looks up a localized string similar to Too deep recursion encountered. Either too deep object is been validated or it contains some unhandled special type..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValuelistItemFound">
            <summary>
              Looks up a localized string similar to Is in the list &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValuelistItemMissing">
            <summary>
              Looks up a localized string similar to Does not contain the item &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValuelistItemNeedList">
            <summary>
              Looks up a localized string similar to The value list item &quot;{0}&quot; at {1} cannot be resolved without a list..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValuelistItemNotIn">
            <summary>
              Looks up a localized string similar to Is not in the value list &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValuelistOfItemMissing">
            <summary>
              Looks up a localized string similar to Is missing, required by &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.ValueOutOfRange">
            <summary>
              Looks up a localized string similar to The value must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.WorkflowFilterReferencePathMissing">
            <summary>
              Looks up a localized string similar to Either the workflow filter reference path or child workflow filter reference path must be defined when using the MFWorkflowSubstructure attribute..
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.Resources.TextResources.WorkflowUndefined">
            <summary>
              Looks up a localized string similar to Required workflow is undefined..
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.TranslatableValue">
            <summary>
            Class representing a single translated text value.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableValue.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="isDefault">Specifies if this text is the default language version of the translatable text.</param>
            <param name="cultureOrLanguage">The culture name in standard format e.g. 'en-US' or 'fi-FI' or the corresponding three-letter ISO language identifier e.g. 'eng' or 'fin'.</param>
            <param name="translatedText">The translated text.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.TranslatableValue.Default">
            <summary>
            Is this the translation in the default language. Optional. If the value is in the default language the culture or language identifier isn't provided.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.TranslatableValue.CultureOrLanguage">
            <summary>
            The culture name of the translated text e.g. 'en-US' or 'fi-FI' or the three-letter language identifier of the text e.g. 'eng' or 'fin'.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.TranslatableValue.Text">
            <summary>
            The translated text.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.TranslatableContent">
            <summary>
            A class representing a collection of translated texts.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.TranslatableContent.supportedCultures">
            <summary>
            List of supported cultures as CultureInfo objects.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.#ctor(System.Collections.Generic.IEnumerable{MFiles.VAF.Configuration.TranslatableValue})">
            <summary>
            Constructor.
            <param name="collection">The other collection whose contents are copied into this one.</param>
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.GetDefaultText">
            <summary>
            Returns the translation that is marked as default.
            </summary>
            <returns>The default translation.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.GetTranslatedText">
            <summary>
            Returns the translated text according to the set culture (CultureInfo.CurrentUICulture).
            </summary>
            <returns>The translated text.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.GetTranslatedTextInVaultLanguage(MFilesAPI.Vault)">
            <summary>
            Returns the translated text according to the user's vault language.
            </summary>
            <param name="vault">The vault object.</param>
            <returns>The translated text.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContent.GetTranslatedText(System.Globalization.CultureInfo)">
            <summary>
            Returns the translated text according to the given culture
            </summary>
            <param name="culture">CultureInfo that specifies which translation to return. Can be null in which case default translation is returned.</param>
            <returns>The translated text.</returns>
        </member>
        <member name="T:MFiles.VAF.Configuration.TranslatableContentJsonConverter">
            <summary>
            Json converter for the TranslatableContent class.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContentJsonConverter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContentJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the type can be converted with this converter.
            </summary>
            <param name="objectType">The target type.</param>
            <returns>True if the type can be handled with this converter.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContentJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Convert the JSON into TranslatableContent object.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns>The constructed object.</returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.TranslatableContentJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Convert the TranslatableContent object into JSON.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:MFiles.VAF.Configuration.TypedValueSetter">
            <summary>
            Property value resolution class, used for static and dynamic value resolution.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.TypedValueSetter.op_Implicit(MFiles.VAF.Configuration.TypedValueSetter)~MFilesAPI.TypedValueClass">
            <summary>
            Allows for implicit conversion to a <see cref="P:MFiles.VAF.Configuration.TypedValueSetter.TypedValue"/>.
            </summary>
            <param name="valueSetter"></param>
            <returns></returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.TypedValueSetter.Mode">
            <summary>
            Editor mode.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.TypedValueSetter.DynamicValue">
            <summary>
            Dynamic Value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.TypedValueSetter.TypedValue">
            <summary>
            Static Value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.TypedValueSetter.TranslatableValue">
            <summary>
            Translatable Value.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.TypedValueSettingMode">
            <summary>
            Mode used to set the value of a property.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.TypedValueSettingMode.Dynamic">
            <summary>
            Placeholder text dynamic resolution mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.TypedValueSettingMode.Static">
            <summary>
            Static value mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.TypedValueSettingMode.TranslatableContent">
            <summary>
            Translatable Content mode.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.TypedValueSettingMode.SetToNULL">
            <summary>
            Sets the typed value to null.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationFindingType">
            <summary>
            Types of Validation findings.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Exception">
            <summary>
            Validation check threw an error (findings inconclusive).
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Error">
            <summary>
            Critical problem found, item is not valid.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Warning">
            <summary>
            Potential problem found, but item is valid.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Ok">
            <summary>
            Validation checks were passed without problem.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Skipped">
            <summary>
            Validation checks were skipped (not run).
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationFindingType.Info">
            <summary>
            Informational only. Can be used for debugging.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationFinding">
            <summary>
            Represents a finding found during validation.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationFinding.#ctor(MFiles.VAF.Configuration.ValidationFindingType,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of validation finding.</param>
            <param name="reference">The json path to the item this issue is for.</param>
            <param name="description">The description of the issue.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationFinding.#ctor(MFiles.VAF.Configuration.ValidationFindingType,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of validation finding.</param>
            <param name="source">The top level item being validated.</param>
            <param name="reference">The json path to the item this issue is for.</param>
            <param name="category">The category of the item.</param>
            <param name="description">The description of the issue.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Source">
            <summary>
            The top level item being validated.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Reference">
            <summary>
            A reference to the specific item this finding is for (the item being validated).
            Relative to the source.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Type">
            <summary>
            The type of validaiton issue.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Category">
            <summary>
            The json path to to item this issue is for.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Description">
            <summary>
            The description of the issue.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationFinding.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultBase">
            <summary>
            Base class for validation and upgrade-related activity. Receives the notifications from vault metadata element existence.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ObjTypeMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing object type.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="objtype">The object type identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ClassMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="objclass">The class identifier (alias, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ClassWrongObjType(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing class.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="objclass">The class identifier (alias, guid, id).</param>
            <param name="objtype">The requested object type identifier (alias, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ClassGroupMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing class group.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="classGroup">The classgroup identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.UserGroupMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing user group.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="userGroup">The user group identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ViewMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing view.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="view">The view identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyDefMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing property definition.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyDefWrongObjType(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report property definition that cannot be used with requested object type.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="objtype">Requested object type (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyDefWrongType(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFDataType[],System.Boolean,System.Boolean)">
            <summary>
            Report property definition that has wrong datatype.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="datatypes">Requested datatypes</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyDefWrongValueList(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report property definition that has wrong valuelist.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="valuelist">Requested valuelist</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyAssociationFailure(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState,System.Boolean,System.Boolean)">
            <summary>
            Report wrongness in property definition association to class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="classobj">Associated class</param>
            <param name="valueRequired">Propertys value is required</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyAssociationNotFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState,System.Boolean,System.Boolean)">
            <summary>
            Report wrongness in property definition association to class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="classobj">Associated class</param>
            <param name="valueRequired">Propertys value is required</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.WorkflowMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing workflow.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="workflow">The workflow identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing state.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced state.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateTransitionMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing transition.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the transition (alias, guid, id) can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateTransitionNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced state transition.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateTransitionNotCorrect(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report incorrect state transition from and to details.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="fromState">The from state identifier (alias, guid, id), this or toState can be empty.</param>
            <param name="toState">The to state identifier (alias, guid, id), this or fromState can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean,System.String)">
            <summary>
            Report missing value list.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="valuelist">The value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="messageCanBeNull">Additional details to log.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListItemNeedList(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report that we cant find value list item without a list
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListItemMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing value list item.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid, id).</param>
            <param name="valuelist">The container value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListItemNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced value list item.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="valueListItem">The value list item identifier (guid, objid string, id).</param>
            <param name="valueList">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.NamedACLMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing NACL.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="nacl">The NACL identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.EmptyValue(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean,System.String)">
            <summary>
            Empty value error.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="identifier">The missing element.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.EmptyValue(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean,System.String)">
            <summary>
            Empty value error.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="identifier">The missing element.</param>
            <param name="parentIdentifier">The parent element for the missing element. Helps to identify the actual missing item.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.MissingValue(MFiles.VAF.Configuration.IConfiguration,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Missing or empty value error, not specifically to reference value.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="keyName">The missing element.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.MarkObjectRef(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Indicates an object reference in the configuration file.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="identifier">The object reference.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ObjTypeFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found object type.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="objtype">The object type identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ClassFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="objclass">The class identifier (alias, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ClassGroupFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found class group.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="classGroup">The classgroup identifier (id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.UserGroupFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found user group.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="userGroup">The classgroup identifier (id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ViewFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found view.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="view">The view identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.PropertyDefFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found property definition.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.WorkflowFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found workflow.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="workflow">The workflow identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found state.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier (alias, guid, id) can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.StateTransitionFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found transition.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier (alias, guid, id) can be empty.</param>
            <param name="fromState">The from state identifier (alias, guid, id) can be empty.</param>
            <param name="toState">The to state identifier (alias, guid, id) can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found value list.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="valuelist">The value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ValueListItemFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found value list item.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid,id)</param>
            <param name="valuelist">The value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.NamedACLFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found NACL.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="nacl">The NACL identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ReportCustomFailure(MFiles.VAF.Configuration.IConfiguration,System.String,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Nullable{System.Boolean})">
            <summary>
            Report custom validation failure.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="itemType">Custom type identifier string of the item.</param>
            <param name="item">The identifier (name, alias, guid, id) of the failed item.</param>
            <param name="message">The custom error message</param>
            <param name="required">Is the reference required, or optional</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ReportCustomFailure(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Nullable{System.Boolean})">
            <summary>
            Report custom validation failure.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="itemType">The metadatastructure item type of the item.</param>
            <param name="item">The identifier (name, alias, guid, id) of the failed item.</param>
            <param name="message">The custom error message</param>
            <param name="required">Is the reference required, or optional</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.ReportError(MFiles.VAF.Configuration.IConfiguration,System.String)">
            <summary>
            Reports the error.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="error">The error string.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.MissingItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional.</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.FailedItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean,System.String)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional.</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">Custom message.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultBase.FoundItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the action with single found metadata element.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForValidation">
            <summary>
            Class interface for handling validation errors.
            Either by throwing an error or fixing the error.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StructureItemName(MFilesAPI.MFMetadataStructureItem)">
            <summary>
            Return string name of metadata type.
            </summary>
            <param name="metadataStructureItem"></param>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.MissingItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.FailedItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Nullable{System.Boolean},System.Boolean,System.String)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="type">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">Custom message</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.FailedItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean,System.String)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">Custom message</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.FoundItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the action with single found metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.FoundItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Perform the action with single found metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="type">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">Pre made log message</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.EmptyValue(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean,System.String)">
            <summary>
            Empty value error.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="identifier">The missing element.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.EmptyValue(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean,System.String)">
            <summary>
            Empty value error.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="identifier">The missing element.</param>
            <param name="parentIdentifier">Parent element of the identifier.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.MissingValue(MFiles.VAF.Configuration.IConfiguration,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Missing or empty value error, not specifically to reference value.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="keyName">The missing element.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
            <param name="message">String specifying the location.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ValueListItemFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found value list item.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid, id).</param>
            <param name="valuelist">The container value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ValueListItemMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing value list item.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid, id).</param>
            <param name="valuelist">The container value list identifier (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ValueListItemNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced value list item.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="valueListItem">The value list item identifier (guid, objid string, id).</param>
            <param name="valueList">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ValueListItemNeedList(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report that we cant find value list item without a list
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="item">The value list item identifier (guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.PropertyAssociationFailure(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState,System.Boolean,System.Boolean)">
            <summary>
            Report wrongness in property definition association to class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="classobj">Associated class</param>
            <param name="valueRequired">Propertys value is required</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.PropertyAssociationNotFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFAssociatedPropertyAttribute.RequiredState,System.Boolean,System.Boolean)">
            <summary>
            Report wrongness in property definition association to class.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="propdef">The property definition identifier (alias, guid, id).</param>
            <param name="classobj">Associated class</param>
            <param name="valueRequired">Propertys value is required</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found state.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier (alias, guid, id)</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing state.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier (alias, guid, id)</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced state.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="state">The state identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateTransitionFound(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report found transition.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier (alias, guid, id) can be empty.</param>
            <param name="fromState">The from state identifier (alias, guid, id) can be empty.</param>
            <param name="toState">The to state identifier (alias, guid, id) can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateTransitionMissing(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report missing transition.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the transition (alias, guid, id) can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateTransitionNotIn(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report misplaced state transition.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.StateTransitionNotCorrect(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,MFiles.VAF.Configuration.MFIdentifier,System.Boolean,System.Boolean)">
            <summary>
            Report incorrect state transition from and to details.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="transition">The transition identifier (alias, guid, id).</param>
            <param name="workflow">The workflow identifier that is expected to contain the state (alias, guid, id).</param>
            <param name="fromState">The from state identifier (alias, guid, id), this or toState can be empty.</param>
            <param name="toState">The to state identifier (alias, guid, id), this or fromState can be empty.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ReportCustomFailure(MFiles.VAF.Configuration.IConfiguration,System.String,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Nullable{System.Boolean})">
            <summary>
            Report custom validation failure.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="itemType">Custom type identifier string of the item.</param>
            <param name="item">The identifier (name, alias, guid, id) of the failed item.</param>
            <param name="message">The custom error message</param>
            <param name="required">Is the reference required, or optional</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ReportCustomFailure(MFiles.VAF.Configuration.IConfiguration,MFilesAPI.MFMetadataStructureItem,MFiles.VAF.Configuration.MFIdentifier,System.String,System.Nullable{System.Boolean})">
            <summary>
            Report custom validation failure.
            </summary>
            <param name="configuration">The module configuration that is being validated.</param>
            <param name="itemType">The metadatastructure item type of the item.</param>
            <param name="item">The identifier (name, alias, guid, id) of the failed item.</param>
            <param name="message">The custom error message</param>
            <param name="required">Is the reference required, or optional</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.ClearLog">
            <summary>
            Clear old log, and prepare SearchResults.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationResultForValidation.SearchResults">
            <summary>
            Log of all events.
            First key = module, second key = type, third alias.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule">
            <summary>
            Summary data object for each Configuration.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule.Name">
            <summary>
            Name of the module.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule.ConfigKey">
            <summary>
            ConfigKey of the module.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule.Enabled">
            <summary>
            Configuration is enabled.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule.Valid">
            <summary>
            Validation is ok.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.SummaryModule.NoConfig">
            <summary>
            Bad case of no configuration.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem">
            <summary>
            Detail item info.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Configuration">
            <summary>
            Name of the configuration.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Type">
            <summary>
            Object type string.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Reference">
            <summary>
            Reference name.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Error">
            <summary>
            Error state.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Missing">
            <summary>
            Missing state.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Required">
            <summary>
            Required or optional.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Message">
            <summary>
            Additional message.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Id">
            <summary>
            Found item id.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.Equals(System.Object)">
            <summary>
            Equality check, needed by duplicate elimination.
            Two items are equal only if all members are equal.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.DetailItem.GetHashCode">
            <summary>
            HashCode override wanted by compiler warning.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForValidation.Results">
            <summary>
            Result object with summary and details.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.Results.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForValidation.Results.AddDetail(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Nullable{System.Boolean},System.String,System.Int32)">
            <summary>
            Method to add new detail entry. Ignores duplicates.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.Results.Summary">
            <summary>
            Summary list.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForValidation.Results.Details">
            <summary>
            Details list.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationResultForValidation.Results.ErrorModules">
            <summary>
            Names of modules in error state.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForUpgrade">
            <summary>
            Class interface for handling validation errors.
            Either by throwing an error or fixing the error.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForUpgrade.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForUpgrade.MarkObjectRef(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier)">
            <summary>
            Indicates an object reference in the configuration file.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="identifier">The object reference.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForUpgrade.MissingItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the error action with single metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValidationResultForUpgrade.FoundItemAction(MFiles.VAF.Configuration.IConfiguration,MFiles.VAF.Configuration.MFIdentifier,MFilesAPI.MFMetadataStructureItem,System.Boolean,System.Boolean)">
            <summary>
            Perform the action with single found metadata element.
            </summary>
            <param name="configuration">The configuration that is being validated.</param>
            <param name="element">The string that identifies the metadata element.</param>
            <param name="metadataStructureItem">The metadata element type.</param>
            <param name="required">Is the reference required, or optional</param>
            <param name="validate">True if the validation action should be performed.</param>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataElements">
            <summary>
            Container for the metadata elements that should be present in the vault after the upgrade. Contains (1) item type, (2) alias and (3) the configuration id that asked the alias.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams">
            <summary>
            Data content for validated/requested metadata items.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams.itemType">
            <summary>
            The metadata structure item type.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams.identifier">
            <summary>
            The identifier for the metadata structure item.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams.moduleConfigId">
            <summary>
            The configuration identifier where the metadata structure reference origins from.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams.wasMissing">
            <summary>
            True if the metadata structure item was not present in the vault metadata structure.
            </summary>
        </member>
        <member name="F:MFiles.VAF.Configuration.ValidationResultForUpgrade.MetadataItemParams.optional">
            <summary>
            True if the metadata structure item was specified to be optional.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.PreviewableTextEditorAttribute">
            <summary>
            Attribute used on a Class Model or a Property ( of a complex object ) to specify how to generate a preview text string,
            to be applied to the previewable text editor in the JsonConfEditor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.#ctor">
            <summary>
            Default Constructor, explicitly sets the TypeEditor property.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.PreviewTemplate">
            <summary>
            When both the PreviewTemplate and the PreviewSources are provided, a preview text string may be generated.
            This will not be applied to items that have no value.
            Used in combination with PreviewSources[] like, String.Format( PreviewTemplate, PreviewSources ).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.PreviewSources">
            <summary>
            Each item in the string array will be a JSPath query string from the current item to the item for which 
            the display value should be resolved.
            When both the PreviewTemplate and the PreviewSources are provided, a preview text string may be generated.
            This will not be applied to items that have no value.
            Used in combination with PreviewTemplate like, String.Format( PreviewTemplate, PreviewSources ).
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.PreviewableTextEditorAttribute.LoadDepth">
            <summary>
            Provides an override depth value to be used in child item generation. Presently, the editor defaults to
            a default depth of a single level in preview text loading. This property allows specifying a depth.
            </summary>
        </member>
        <member name="T:MFiles.VAF.Configuration.ValueSetterAttribute">
            <summary>
            [Typed|Property] Value Setter allows for specifying additional Property Setter Options.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValueSetterAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValueSetterAttribute.HasOptions">
            <summary>
            Determines if this attribute defines custom options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MFiles.VAF.Configuration.ValueSetterAttribute.GetOptions">
            <summary>
            Gets the custom options defined by this attribute.
            </summary>
            <returns>Dynamic expando object</returns>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValueSetterAttribute.AllowedModes">
            <summary>
            Valid modes available for setting the value.
            </summary>
        </member>
        <member name="P:MFiles.VAF.Configuration.ValueSetterAttribute.PropertyDefReferencePath">
            <summary>
            Define to JSPath to the 'item' that contains the property definition to filter against.
            <usage>
            // PropertyDefReferencePath = ".parent._children{.key = 'MySiblingItem' } "
            var propdefRefItem = JSPath.apply( item.options.propertyDefReferencePath , item )[ 0 ];
            var propDef = propdefRefItem.structureDef;
            </usage>
            </summary>
        </member>
    </members>
</doc>
